openapi: 3.0.3
info:
  contact:
    email: support@mangadex.com
    name: MangaDex staff team
  description: |-
    MangaDex is an ad-free manga reader offering high-quality images!

    This document details our API as it is right now. It is in no way a promise to never change it, although we will endeavour to publicly notify any major change.

    # Acceptable use policy

    Usage of our services implies acceptance of the following:
    - You should credit us
    - You shouldn't run ads on your website

    These may change at any time for any and no reason and it is up to you check for updates from time to time.

    # Authentication

    You can login with the `/auth/login` endpoint. On success, it will return a JWT that remains valid for 15 minutes along with a session token that allows refreshing without re-authenticating for 1 month.

    # Rate limits

    The API enforces rate-limits to protect our servers against malicious and/or mistaken use. The API keeps track of the requests on an IP-by-IP basis.
    Hence, if you're on a VPN, proxy or a shared network in general, the requests of other users on this network might affect you.

    At first, a **global limit of 5 requests per second per IP address** is in effect.

    > This limit is enforced across multiple load-balancers, and thus
    is not an exact value but rather a lower-bound that we guarantee. The exact value will be somewhere in the range `[5, 5*n]` (with `n` being the number of
    load-balancers currently active). The exact value within this range will depend on the current traffic patterns we are experiencing.

    On top of this, **some endpoints are further restricted** as follows:

    | Endpoint                           | Requests per time period    | Time period in minutes |
    |------------------------------------|--------------------------   |------------------------|
    | `POST   /account/create`           | 5                           | 60                     |
    | `POST   /account/activate/{code}`  | 30                          | 60                     |
    | `POST   /account/activate/resend`  | 5                           | 60                     |
    | `POST   /account/recover`          | 5                           | 60                     |
    | `POST   /account/recover/{code}`   | 5                           | 60                     |
    | `POST   /auth/login`               | 30                          | 60                     |
    | `POST   /auth/refresh`             | 60                          | 60                     |
    | `POST   /author`                   | 10                          | 60                     |
    | `PUT    /author`                   | 10                          | 1                      |
    | `DELETE /author/{id}`              | 10                          | 10                     |
    | `POST   /captcha/solve`            | 10                          | 10                     |
    | `POST   /chapter/{id}/read`        | 300                         | 10                     |
    | `PUT    /chapter/{id}`             | 10                          | 1                      |
    | `DELETE /chapter/{id}`             | 10                          | 1                      |
    | `POST   /manga`                    | 10                          | 60                     |
    | `PUT    /manga/{id}`               | 10                          | 60                     |
    | `DELETE /manga/{id}`               | 10                          | 10                     |
    | `POST   /manga/draft/{id}/commit`  | 10                          | 60                     |
    | `POST   /cover`                    | 10                          | 1                      |
    | `PUT    /cover/{id}`               | 10                          | 1                      |
    | `DELETE /cover/{id}`               | 10                          | 10                     |
    | `POST   /group`                    | 10                          | 60                     |
    | `PUT    /group/{id}`               | 10                          | 1                      |
    | `DELETE /group/{id}`               | 10                          | 10                     |
    | `GET    /at-home/server/{id}`      | 40                          | 1                      |
    | `POST   /report`                   | 10                          | 1                      |
    | `POST   /upload/begin`             | 30                          | 1                      |
    | `POST   /upload/begin/{id}`        | 30                          | 1                      |
    | `DELETE /user/{id}`                | 5                           | 60                     |

    Calling these endpoints will further provide details via the following headers about your remaining quotas:

    | Header                    | Description                                                                 |
    |---------------------------|-----------------------------------------------------------------------------|
    | `X-RateLimit-Limit`       | Maximal number of requests this endpoint allows per its time period         |
    | `X-RateLimit-Remaining`   | Remaining number of requests within your quota for the current time period  |
    | `X-RateLimit-Retry-After` | Timestamp of the end of the current time period, as UNIX timestamp          |

    # Result Limit

    Most of our listing endpoints will return a maximum number of total results that is currently capped at 10.000 items. Beyond that you will not receive any more items no matter how far you paginate and the results will become empty instead. This is for performance reasons and a limitation we will not lift.

    Note that the limit is applied to a search query and list endpoints with or without any filters are search queries.
    If you need to retrieve more items, use filters to narrow down your search.

    # Reference Expansion

    Reference Expansion is a feature of certain endpoints where relationships of a resource are expanded with their attributes, which reduces the amount of requests that need to be sent to the API to retrieve a complete set of data.

    It works by appending a list of includes to the query with the type names from the relationships. If an endpoint supports this feature is indicated by the presence of the optional `includes` parameter.

    ## Example

    To fetch a specific manga with `author`, `artist` and `cover_art` expanded, you can send the following request: `GET /manga/f9c33607-9180-4ba6-b85c-e4b5faee7192?includes[]=author&includes[]=artist&includes[]=cover_art`. You will now find the objects attributes inside the returned relationships array.

    ## Note

    Your current user needs `*.view` permission on each type of reference you want to expand. Guests have most of these permissions and for logged-in user accounts you can check `GET /auth/check` to list all permissions you have been granted. For example, to be able to expand `cover_art`, you need to have been granted the `cover.view` permission, for `author` and `artist` types you need the `author.view` permission and so on.
    If a reference can't be expanded, the request will still succeed and no error indication will be visible.

    # Captchas

    Some endpoints may require captchas to proceed, in order to slow down automated malicious traffic.
    Legitimate users might also be affected, based on the frequency of write requests or due certain endpoints being particularly sensitive to malicious use, such as user signup.

    Once an endpoint decides that a captcha needs to be solved, a 403 Forbidden response will be returned, with the error code `captcha_required_exception`.
    The sitekey needed for recaptcha to function is provided in both the `X-Captcha-Sitekey` header field, as well as in the error context, specified as `siteKey` parameter.

    The captcha result of the client can either be passed into the repeated original request with the `X-Captcha-Result` header or alternatively to the `POST /captcha/solve` endpoint.
    The time a solved captcha is remembered varies across different endpoints and can also be influenced by individual client behavior.

    Authentication is not required for the `POST /captcha/solve` endpoint, captchas are tracked both by client ip and logged in user id.
    If you are logged in, you want to send the session token along, so you validate the captcha for your client ip and user id at the same time, but it is not required.

    # Reading a chapter using the API

    ## Retrieving pages from the MangaDex@Home network

    A valid [MangaDex@Home network](https://mangadex.network) page URL is in the following format: `{server-specific base url}/{temporary access token}/{quality mode}/{chapter hash}/{filename}`

    There are currently 2 quality modes:
    - `data`: Original upload quality
    - `data-saver`: Compressed quality

    Upon fetching a chapter from the API, you will find 4 fields necessary to compute MangaDex@Home page URLs:

    | Field                        | Type     | Description                       |
    |------------------------------|----------|-----------------------------------|
    | `.data.id`                   | `string` | API Chapter ID                    |
    | `.data.attributes.hash`      | `string` | MangaDex@Home Chapter Hash        |
    | `.data.attributes.data`      | `array`  | data quality mode filenames       |
    | `.data.attributes.dataSaver` | `array`  | data-saver quality mode filenames |

    Example
    ```json
    GET /chapter/{id}

    {
      ...,
      "data": {
        "id": "e46e5118-80ce-4382-a506-f61a24865166",
        ...,
        "attributes": {
          ...,
          "hash": "e199c7d73af7a58e8a4d0263f03db660",
          "data": [
            "x1-b765e86d5ecbc932cf3f517a8604f6ac6d8a7f379b0277a117dc7c09c53d041e.png",
            ...
          ],
          "dataSaver": [
            "x1-ab2b7c8f30c843aa3a53c29bc8c0e204fba4ab3e75985d761921eb6a52ff6159.jpg",
            ...
          ]
        }
      }
    }
    ```

    From this point you miss only the base URL to an assigned MangaDex@Home server for your client and chapter. This is retrieved via a `GET` request
    to `/at-home/server/{ chapter .data.id }`.

    Example:
    ```json
    GET /at-home/server/e46e5118-80ce-4382-a506-f61a24865166

    {
      "baseUrl": "https://abcdefg.hijklmn.mangadex.network:12345/some-token"
    }
    ```

    The full URL is the constructed as follows
    ```
    { server .baseUrl }/{ quality mode }/{ chapter .data.attributes.hash }/{ chapter .data.attributes.{ quality mode }.[*] }

    Examples

    data quality: https://abcdefg.hijklmn.mangadex.network:12345/some-token/data/e199c7d73af7a58e8a4d0263f03db660/x1-b765e86d5ecbc932cf3f517a8604f6ac6d8a7f379b0277a117dc7c09c53d041e.png

          base url: https://abcdefg.hijklmn.mangadex.network:12345/some-token
      quality mode: data
      chapter hash: e199c7d73af7a58e8a4d0263f03db660
          filename: x1-b765e86d5ecbc932cf3f517a8604f6ac6d8a7f379b0277a117dc7c09c53d041e.png


    data-saver quality: https://abcdefg.hijklmn.mangadex.network:12345/some-token/data-saver/e199c7d73af7a58e8a4d0263f03db660/x1-ab2b7c8f30c843aa3a53c29bc8c0e204fba4ab3e75985d761921eb6a52ff6159.jpg

          base url: https://abcdefg.hijklmn.mangadex.network:12345/some-token
      quality mode: data-saver
      chapter hash: e199c7d73af7a58e8a4d0263f03db660
          filename: x1-ab2b7c8f30c843aa3a53c29bc8c0e204fba4ab3e75985d761921eb6a52ff6159.jpg
    ```

    If the server you have been assigned fails to serve images, you are allowed to call the `/at-home/server/{ chapter id }` endpoint again to get another server.

    Whether successful or not, **please do report the result you encountered as detailed below**. This is so we can pull the faulty server out of the network.

    # Manga Creation

    Similar to how the Chapter Upload works, after a Mangas creation with the Manga Create endpoint it is in a "draft" state, needs to be submitted (committed) and get either approved or rejected by Staff.

    The purpose of this is to force at least one CoverArt uploaded for the Manga Draft and to discourage troll entries. You can use the list-drafts endpoint to investigate the status of your submitted Manga Drafts. Rejected Drafts are occasionally cleaned up at an irregular interval. You can edit Drafts at any time, even after they have been submitted.

    Because a Manga that is in the draft state is not available through the search, there are slightly different endpoints to list or retrieve Manga Drafts, but outside from that the schema is identical to a Manga that is published.

    # Language Codes & Localization

    To denote Chapter Translation language, translated fields such as Titles and Descriptions, the API expects a 2-letter language code in accordance with the [ISO 639-1 standard](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes). Additionally, some cases require the [5-letter extension](https://en.wikipedia.org/wiki/IETF_language_tag) if the alpha-2 code is not sufficient to determine the correct sub-type of a language, in the style of $language-$region, e.g. `zh-hk` or `pt-br`.

    Because there is no standardized method of denoting romanized translations, we chose to append the `-ro` suffix. For example the romanized version of `五等分の花嫁` is `5Toubun no Hanayome` or `Gotoubun no Hanayome`. Both would have the `ja-ro` language code, alternative versions are inserted as alternative titles. This is a clear distinction from the localized `en` translation `The Quintessential Quintuplets`

    Notable exceptions are in the table below, otherwise ask a staff member if unsure.

    | alpha-5 | Description            |
    |---------|------------------------|
    | `zh`    | Simplified Chinese     |
    | `zh-hk` | Traditional Chinese    |
    | `pt-br` | Brazilian Portugese    |
    | `es`    | Castilian Spanish      |
    | `es-la` | Latin American Spanish |
    | `ja-ro` | Romanized Japanese     |
    | `ko-ro` | Romanized Korean       |
    | `zh-ro` | Romanized Chinese      |

    # Report

    In order to keep track of the health of the servers in the network and to improve the quality of service and reliability, we ask that you call the
    MangaDex@Home report endpoint after each image you retrieve, whether successfully or not.

    It is a `POST` request against `https://api.mangadex.network/report` and expects the following payload with our example above:

    | Field                       | Type       | Description                                                                         |
    |-----------------------------|------------|-------------------------------------------------------------------------------------|
    | `url`                       | `string`   | The full URL of the image                                                           |
    | `success`                   | `boolean`  | Whether the image was successfully retrieved                                        |
    | `cached `                   | `boolean`  | `true` iff the server returned an `X-Cache` header with a value starting with `HIT` |
    | `bytes`                     | `number`   | The size in bytes of the retrieved image                                            |
    | `duration`                  | `number`   | The time in miliseconds that the complete retrieval (not TTFB) of this image took   |

    Examples herafter.

    **Success:**
    ```json
    POST https://api.mangadex.network/report
    Content-Type: application/json

    {
      "url": "https://abcdefg.hijklmn.mangadex.network:12345/some-token/data/e199c7d73af7a58e8a4d0263f03db660/x1-b765e86d5ecbc932cf3f517a8604f6ac6d8a7f379b0277a117dc7c09c53d041e.png",
      "success": true,
      "bytes": 727040,
      "duration": 235,
      "cached": true
    }
    ```

    **Failure:**
    ```json
    POST https://api.mangadex.network/report
    Content-Type: application/json

    {
     "url": "https://abcdefg.hijklmn.mangadex.network:12345/some-token/data/e199c7d73af7a58e8a4d0263f03db660/x1-b765e86d5ecbc932cf3f517a8604f6ac6d8a7f379b0277a117dc7c09c53d041e.png",
     "success": false,
     "bytes": 25,
     "duration": 235,
     "cached": false
    }
    ```

    While not strictly necessary, this helps us monitor the network's healthiness, and we appreciate your cooperation towards this goal. If no one reports
    successes and failures, we have no way to know that a given server is slow/broken, which eventually results in broken image retrieval for everyone.

    # Retrieving Covers from the API

    ## Construct Cover URLs

    ### Source (original/best quality)

    `https://uploads.mangadex.org/covers/{ manga.id }/{ cover.filename }`<br/>
    The extension can be png, jpeg or gif.

    Example: `https://uploads.mangadex.org/covers/8f3e1818-a015-491d-bd81-3addc4d7d56a/4113e972-d228-4172-a885-cb30baffff97.jpg`

    ### <=512px wide thumbnail

    `https://uploads.mangadex.org/covers/{ manga.id }/{ cover.filename }.512.jpg`<br/>
    The extension is always jpg.

    Example: `https://uploads.mangadex.org/covers/8f3e1818-a015-491d-bd81-3addc4d7d56a/4113e972-d228-4172-a885-cb30baffff97.jpg.512.jpg`

    ### <=256px wide thumbnail

    `https://uploads.mangadex.org/covers/{ manga.id }/{ cover.filename }.256.jpg`<br/>
    The extension is always jpg.

    Example: `https://uploads.mangadex.org/covers/8f3e1818-a015-491d-bd81-3addc4d7d56a/4113e972-d228-4172-a885-cb30baffff97.jpg.256.jpg`

    ## ℹ️ Where to find Cover filename ?

    Look at the [Get cover operation](#operation/get-cover) endpoint to get Cover information.
    Also, if you get a Manga resource, you'll have, if available a `covert_art` relationship which is the main cover id.

    # Static data

    ## Manga publication demographic

    | Value            | Description               |
    |------------------|---------------------------|
    | shounen          | Manga is a Shounen        |
    | shoujo           | Manga is a Shoujo         |
    | josei            | Manga is a Josei          |
    | seinen           | Manga is a Seinen         |

    ## Manga status

    | Value            | Description               |
    |------------------|---------------------------|
    | ongoing          | Manga is still going on   |
    | completed        | Manga is completed        |
    | hiatus           | Manga is paused           |
    | cancelled        | Manga has been cancelled  |

    ## Manga reading status

    | Value            |
    |------------------|
    | reading          |
    | on_hold          |
    | plan\_to\_read   |
    | dropped          |
    | re\_reading      |
    | completed        |

    ## Manga content rating

    | Value            | Description               |
    |------------------|---------------------------|
    | safe             | Safe content              |
    | suggestive       | Suggestive content        |
    | erotica          | Erotica content           |
    | pornographic     | Pornographic content      |

    ## CustomList visibility

    | Value            | Description               |
    |------------------|---------------------------|
    | public           | CustomList is public      |
    | private          | CustomList is private     |

    ## Relationship types

    | Value            | Description                    |
    |------------------|--------------------------------|
    | manga            | Manga resource                 |
    | chapter          | Chapter resource               |
    | cover_art        | A Cover Art for a manga `*`    |
    | author           | Author resource                |
    | artist           | Author resource (drawers only) |
    | scanlation_group | ScanlationGroup resource       |
    | tag              | Tag resource                   |
    | user             | User resource                  |
    | custom_list      | CustomList resource            |

    `*` Note, that on manga resources you get only one cover_art resource relation marking the primary cover if there are more than one.
    By default this will be the latest volume's cover art. If you like to see all the covers for a given manga, use the cover search endpoint for your mangaId and select the one you wish to display.

    ## Manga links data

    In Manga attributes you have the `links` field that is a JSON object with some strange keys, here is how to decode this object:

    | Key   | Related site  | URL                                                                                           | URL details                                                    |
    |-------|---------------|-----------------------------------------------------------------------------------------------|----------------------------------------------------------------|
    | al    | anilist       | https://anilist.co/manga/`{id}`                                                               | Stored as id                                                   |
    | ap    | animeplanet   | https://www.anime-planet.com/manga/`{slug}`                                                   | Stored as slug                                                 |
    | bw    | bookwalker.jp | https://bookwalker.jp/`{slug}`                                                                | Stored has "series/{id}"                                       |
    | mu    | mangaupdates  | https://www.mangaupdates.com/series.html?id=`{id}`                                            | Stored has id                                                  |
    | nu    | novelupdates  | https://www.novelupdates.com/series/`{slug}`                                                  | Stored has slug                                                |
    | kt    | kitsu.io      | https://kitsu.io/api/edge/manga/`{id}` or https://kitsu.io/api/edge/manga?filter[slug]={slug} | If integer, use id version of the URL, otherwise use slug one  |
    | amz   | amazon        | N/A                                                                                           | Stored as full URL                                             |
    | ebj   | ebookjapan    | N/A                                                                                           | Stored as full URL                                             |
    | mal   | myanimelist   | https://myanimelist.net/manga/{id}                                                            | Store as id                                                    |
    | cdj   | CDJapan       | N/A                                                                                           | Stored as full URL                                             |
    | raw   | N/A           | N/A                                                                                           | Stored as full URL, untranslated stuff URL (original language) |
    | engtl | N/A           | N/A                                                                                           | Stored as full URL, official english licenced URL              |

    ## Manga related enum

    This data is used in the "related" field of a Manga relationships

    | Value            |
    |------------------|
    | monochrome       |
    | main_story       |
    | adapted_from     |
    | based_on         |
    | prequel          |
    | side_story       |
    | doujinshi        |
    | same_franchise   |
    | shared_universe  |
    | sequel           |
    | spin_off         |
    | alternate_story  |
    | preserialization |
    | colored          |
    | serialization    |

    # Chapter Upload

    ## In A Nutshell

    To upload a chapter, you need to start an upload-session, upload files to this session and once done, commit the session with a ChapterDraft.
    Uploaded Chapters will generally be put into a queue for staff approval and image processing before it is available to the public.

    ## Limits

    - 1 Active Upload Session per user. Before opening a second session, either commit or abandon your current session
    - 10 files per one PUT request is max
    - 500 files per upload session is max
    - 20 MB max uploaded session filesize
    - 150 MB max total sum of all uploaded session filesizes
    - Allowed file extensions: jpg, jpeg, png, gif
    - Image must fit into max resolution of 10000x10000 px

    ## Example

    You need to be logged in for any upload operation. Which Manga you're allowed to upload to and which contributing Scanlation Groups you're free to credit depend on your individual user state.

    To start an upload session, we pick the manga-id we want to upload to and the group-ids we have to credit. We use the official test manga `f9c33607-9180-4ba6-b85c-e4b5faee7192` and the group "Unknown" with id `145f9110-0a6c-4b71-8737-6acb1a3c5da4`. If no group can be credited, we would not send any group-id at all, otherwise we can credit up to 5 groups.
    Note that crediting all involved groups is mandatory, doing otherwise will lead to a rejection of your upload.

    The first step is optional, but because only one upload session is allowed per user, we check if we have any open upload sessions by doing `GET /upload`. We expect a 404 response with error detail 'No upload session found'.

    Next step is to begin our upload session. We send a `POST /upload/begin` with json data. (If you want to edit an existing chapter, append the chapter id after it `POST /upload/begin/db99d333-76e9-4e66-9c97-4831c43ac96c` with its version as the json payload)

    Request:
    ```json
    {
      'manga' => 'f9c33607-9180-4ba6-b85c-e4b5faee7192',
      'groups': [
        '145f9110-0a6c-4b71-8737-6acb1a3c5da4'
      ]
    }
    ```
    Response:
    ```json
    {
      'result': 'ok',
      'data': {
        'id': '113b7724-dcc2-4fbc-968f-9d775fcb1cd6',
        'type': 'upload_session',
        'attributes': {
          'isCommitted': false,
          'isProcessed': false,
          'isDeleted': false
        },
        'relationships': [
          {
            'id': '41ce3e1a-8325-45b5-af8e-06aaf648a0df',
            'type': 'user'
          },
          {
            'id': 'f9c33607-9180-4ba6-b85c-e4b5faee7192',
            'type': 'manga'
          },
          {
            'id': '145f9110-0a6c-4b71-8737-6acb1a3c5da4',
            'type': 'scanlation_group'
          }
        ]
      }
    }
    ```

    the `data.id` is what you want to store because you will need it for the following steps. We will refer to it as the `uploadSessionId` from here on out.

    Remember the `GET /upload` request from the beginning? Try it again and you will see that it will return the same uploadSessionId. You can only have one upload session per user until you commit or abandon it, which makes it easy for you to continue uploading at a later time.

    Now that we have a `uploadSessionId`, we can upload images. Any .jpg, .jpeg, .png or .gif files are fine, archives like .zip, .cbz or .rar are not. You will have to extract those archives beforehand if you want to make this work.

    For each file, send a POST request like `POST /upload/{uploadSessionId}` with the image data. FormData seems to work best with `Content-Type: multipart/form-data; boundary=boundary`, mileage might vary depending on your programming language. Join our discord and ask for advice if in doubt.

    You can upload a number of files in a single request (currently max. 10). The response body will be successful (response.result == 'ok') but might also contain errors if one or more files failed to validate. It's up to you to handle bad uploads and retry or reupload as you see fit. Successful uploads will be returned in the data array as type `upload_session_file`

    A successful response could look like this:
    ```json
    {
      'result': 'ok',
      'errors': [],
      'data': [
        {
          'id': '12cc211a-c3c3-4f64-8493-f26f9b98c6f6',
          'type': 'upload_session_file',
          'attributes': {
            'originalFileName': 'testimage1.png',
            'fileHash': 'bbf9b9548ee4605c388acb09e8ca83f625e5ff8e241f315eab5291ebd8049c6f',
            'fileSize': 18920,
            'mimeType': 'image/png',
            'version': 1
          }
        }
      ]
    }
    ```
    Store the data[{index}].id attribute as the `uploadSessionFileId`, this will be the unique identifier for the file you just uploaded.

    If you change your mind and want to remove a previously uploaded image, you can send a request like `DELETE /upload/{uploadSessionId}/{uploadSessionFileId}`, expecting a response like
    ```json
    {
      'response': 'ok'
    }
    ```

    Finally you can commit your upload session. We opened with a manga-id and group-ids but what we actually want is to upload a chapter. For that we have to build a payload consisting of two things: a chapterDraft and a pageOrder. The payload will look similar to the following:

    ```json
    {
      'chapterDraft': {
        'volume': '1',
        'chapter': '2.5',
        'title': 'Read Online',
        'translatedLanguage': 'en'
      },
      'pageOrder': [
          '12cc211a-c3c3-4f64-8493-f26f9b98c6f6'
      ]
    }
    ```

    the `chapterDraft` is the chapter data you would like to create, the pageOrder is an ordered list of uploadSessionFileIds you uploaded earlier.

    Order didnt matter, now it does. Any files you uploaded but do not specify in this pageOrder array will be deleted.

    An example response is:
    ```json
    {
      'result': 'ok',
      'data': {
        'id': '14d4639b-5a8f-4f42-a277-b222412930ca',
        'type': 'chapter',
        'attributes': {
          'volume': '1',
          'chapter': '2.5',
          'title': 'Read Online',
          'translatedLanguage': 'en',
          'hash': '',
          'data': [],
          'dataSaver': [],
          'publishAt': null,
          'createdAt': '2021-06-16T00:40:22+00:00',
          'updatedAt': '2021-06-16T00:40:22+00:00',
          'version': 1
        },
        'relationships': [
          {
            'id': '145f9110-0a6c-4b71-8737-6acb1a3c5da4',
            'type': 'scanlation_group'
          },
          {
            'id': 'f9c33607-9180-4ba6-b85c-e4b5faee7192',
            'type': 'manga'
          },
          {
            'id': '41ce3e1a-8325-45b5-af8e-06aaf648a0df',
            'type': 'user'
          }
        ]
      }
    }
    ```

    You just uploaded a chapter. Congratz!

    The returned chapter has empty data and dataSaver attributes where otherwise the pages would be. This is because the image processing happens asynchroniously. Depending on how many chapters need to be processed at a given time, it might take a while for this to be updated.

    The first time you upload a chapter in a language you didn't upload before, it will have to be approved by staff.
    Until both imageprocessing and possible approval have happened, your chapter will be held back and not appear on the website or be found in the list and search endpoints.

    As mentioned in the beginning, to edit a chapter use the `POST /upload/begin/{chapterId}` endpoint [`begin-edit-session`](#operation/begin-edit-session) with the current chapter version as the json POST-body payload, and the UploadSession will come pre-filled with the remote existing UploadSessionFiles which you can reorder, remove, upload new images and commit your changes afterward as if it was a new chapter.
  title: MangaDex API
  version: 5.3.12
servers:
- description: MangaDex Api
  url: https://api.mangadex.org
security:
- Bearer: []
tags:
- name: Manga
- name: Cover
- name: Chapter
- name: AtHome
- name: Feed
- name: Upload
- name: ScanlationGroup
- name: Author
- name: ChapterReadMarker
- name: Report
- name: Auth
- name: Account
- name: User
- name: Follows
- name: CustomList
- name: Legacy
- name: Captcha
- name: Infrastructure
paths:
  /ping:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                default: pong
                type: string
          description: Pong
      security: []
      summary: Ping the server
      tags:
      - Infrastructure
      x-accepts: application/json
  /manga:
    get:
      description: Search a list of Manga.
      operationId: get-search-manga
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: title
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: authors[]
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: artists[]
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Year of release
        explode: true
        in: query
        name: year
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: includedTags[]
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: includedTagsMode
        required: false
        schema:
          default: AND
          enum:
          - AND
          - OR
          type: string
        style: form
      - explode: true
        in: query
        name: excludedTags[]
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: excludedTagsMode
        required: false
        schema:
          default: OR
          enum:
          - AND
          - OR
          type: string
        style: form
      - explode: true
        in: query
        name: status[]
        required: false
        schema:
          items:
            enum:
            - ongoing
            - completed
            - hiatus
            - cancelled
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: originalLanguage[]
        required: false
        schema:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: excludedOriginalLanguage[]
        required: false
        schema:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: availableTranslatedLanguage[]
        required: false
        schema:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: publicationDemographic[]
        required: false
        schema:
          items:
            enum:
            - shounen
            - shoujo
            - josei
            - seinen
            - none
            type: string
          type: array
        style: form
      - description: Manga ids (limited to 100 per request)
        explode: true
        in: query
        name: ids[]
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: contentRating[]
        required: false
        schema:
          default:
          - safe
          - suggestive
          - erotica
          items:
            enum:
            - safe
            - suggestive
            - erotica
            - pornographic
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: createdAtSince
        required: false
        schema:
          description: 'DateTime string with following format: YYYY-MM-DDTHH:MM:SS'
          pattern: ^\d{4}-[0-1]\d-([0-2]\d|3[0-1])T([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$
          type: string
        style: form
      - explode: true
        in: query
        name: updatedAtSince
        required: false
        schema:
          description: 'DateTime string with following format: YYYY-MM-DDTHH:MM:SS'
          pattern: ^\d{4}-[0-1]\d-([0-2]\d|3[0-1])T([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$
          type: string
        style: form
      - $ref: '#/components/parameters/order'
        explode: false
        in: query
        name: order
        required: false
        schema:
          default:
            latestUploadedChapter: desc
          properties:
            title:
              enum:
              - asc
              - desc
              type: string
            year:
              enum:
              - asc
              - desc
              type: string
            createdAt:
              enum:
              - asc
              - desc
              type: string
            updatedAt:
              enum:
              - asc
              - desc
              type: string
            latestUploadedChapter:
              enum:
              - asc
              - desc
              type: string
            followedCount:
              enum:
              - asc
              - desc
              type: string
            relevance:
              enum:
              - asc
              - desc
              type: string
          type: object
        style: deepObject
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: hasAvailableChapters
        required: false
        schema:
          enum:
          - "0"
          - "1"
          - "true"
          - "false"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MangaList'
          description: Manga list
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      security: []
      summary: Manga list
      tags:
      - Manga
      x-accepts: application/json
    post:
      description: Create a new Manga.
      operationId: post-manga
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MangaCreate'
        description: The size of the body is limited to 16KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MangaResponse'
          description: Manga Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      summary: Create Manga
      tags:
      - Manga
      x-contentType: application/json
      x-accepts: application/json
  /manga/{id}/aggregate:
    get:
      parameters:
      - description: Manga ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: translatedLanguage[]
        required: false
        schema:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: groups[]
        required: false
        schema:
          items:
            format: uuid
            maxLength: 36
            minLength: 36
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: OK
      security: []
      summary: Get Manga volumes & chapters
      tags:
      - Manga
      x-accepts: application/json
  /manga/{id}:
    delete:
      operationId: delete-manga-id
      parameters:
      - description: Manga ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Manga has been deleted.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Delete Manga
      tags:
      - Manga
      x-accepts: application/json
    get:
      description: View Manga.
      operationId: get-manga-id
      parameters:
      - description: Manga ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MangaResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Manga no content
      security: []
      summary: View Manga
      tags:
      - Manga
      x-accepts: application/json
    put:
      operationId: put-manga-id
      parameters:
      - description: Manga ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MangaEdit'
              - properties:
                  artists:
                    items:
                      format: uuid
                      maxLength: 36
                      minLength: 36
                      type: string
                    type: array
                  authors:
                    items:
                      format: uuid
                      maxLength: 36
                      minLength: 36
                      type: string
                    type: array
                type: object
        description: The size of the body is limited to 16KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MangaResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Update Manga
      tags:
      - Manga
      x-contentType: application/json
      x-accepts: application/json
  /auth/login:
    post:
      operationId: post-auth-login
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        description: The size of the body is limited to 2KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          description: Unauthorized
      security: []
      summary: Login
      tags:
      - Auth
      x-contentType: application/json
      x-accepts: application/json
  /auth/check:
    get:
      operationId: get-auth-check
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
          description: OK
      summary: Check token
      tags:
      - Auth
      x-accepts: application/json
  /auth/logout:
    post:
      operationId: post-auth-logout
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
          description: OK
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
      summary: Logout
      tags:
      - Auth
      x-accepts: application/json
  /auth/refresh:
    post:
      operationId: post-auth-refresh
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshToken'
        description: The size of the body is limited to 2KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security: []
      summary: Refresh token
      tags:
      - Auth
      x-contentType: application/json
      x-accepts: application/json
  /account/create:
    post:
      operationId: post-account-create
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
        description: The size of the body is limited to 4KB.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      security: []
      summary: Create Account
      tags:
      - Account
      x-contentType: application/json
      x-accepts: application/json
  /account/activate/{code}:
    post:
      operationId: get-account-activate-code
      parameters:
      - explode: false
        in: path
        name: code
        required: true
        schema:
          pattern: '[0-9a-fA-F-]+'
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountActivateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security: []
      summary: Activate account
      tags:
      - Account
      x-accepts: application/json
  /group:
    get:
      operationId: get-search-group
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: ScanlationGroup ids (limited to 100 per request)
        explode: true
        in: query
        name: ids[]
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: focusedLanguage
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanlationGroupList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security: []
      summary: Scanlation Group list
      tags:
      - ScanlationGroup
      x-accepts: application/json
    post:
      operationId: post-group
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScanlationGroup'
        description: The size of the body is limited to 16KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanlationGroupResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      summary: Create Scanlation Group
      tags:
      - ScanlationGroup
      x-contentType: application/json
      x-accepts: application/json
  /group/{id}:
    delete:
      operationId: delete-group-id
      parameters:
      - description: Scanlation Group ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Delete Scanlation Group
      tags:
      - ScanlationGroup
      x-accepts: application/json
    get:
      operationId: get-group-id
      parameters:
      - description: Scanlation Group ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanlationGroupResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ScanlationGroup not found
      security: []
      summary: View Scanlation Group
      tags:
      - ScanlationGroup
      x-accepts: application/json
    put:
      operationId: put-group-id
      parameters:
      - description: Scanlation Group ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanlationGroupEdit'
        description: The size of the body is limited to 8KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanlationGroupResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Update Scanlation Group
      tags:
      - ScanlationGroup
      x-contentType: application/json
      x-accepts: application/json
  /group/{id}/follow:
    delete:
      operationId: delete-group-id-follow
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Unfollow Scanlation Group
      tags:
      - ScanlationGroup
      x-accepts: application/json
    post:
      operationId: post-group-id-follow
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Follow Scanlation Group
      tags:
      - ScanlationGroup
      x-accepts: application/json
  /list:
    post:
      operationId: post-list
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomListCreate'
        description: The size of the body is limited to 8KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Create CustomList
      tags:
      - CustomList
      x-contentType: application/json
      x-accepts: application/json
  /list/{id}:
    delete:
      operationId: delete-list-id
      parameters:
      - description: CustomList ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Delete CustomList
      tags:
      - CustomList
      x-accepts: application/json
    get:
      operationId: get-list-id
      parameters:
      - description: CustomList ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomListResponse'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: CustomList not found
      security: []
      summary: Get CustomList
      tags:
      - CustomList
      x-accepts: application/json
    put:
      description: The size of the body is limited to 8KB.
      operationId: put-list-id
      parameters:
      - description: CustomList ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomListEdit'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Update CustomList
      tags:
      - CustomList
      x-contentType: application/json
      x-accepts: application/json
  /manga/{id}/list/{listId}:
    delete:
      operationId: delete-manga-id-list-listId
      parameters:
      - description: Manga ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: CustomList ID
        explode: false
        in: path
        name: listId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Remove Manga in CustomList
      tags:
      - CustomList
      x-accepts: application/json
    post:
      operationId: post-manga-id-list-listId
      parameters:
      - description: Manga ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: CustomList ID
        explode: false
        in: path
        name: listId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Add Manga in CustomList
      tags:
      - CustomList
      x-accepts: application/json
  /user/list:
    get:
      description: This will list public and private CustomList
      operationId: get-user-list
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomListList'
          description: OK
      summary: Get logged User CustomList list
      tags:
      - CustomList
      x-accepts: application/json
  /user/{id}/list:
    get:
      description: This will list only public CustomList
      operationId: get-user-id-list
      parameters:
      - description: User ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomListList'
          description: OK
      security: []
      summary: Get User's CustomList list
      tags:
      - CustomList
      x-accepts: application/json
  /user:
    get:
      operationId: get-user
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: User ids (limited to 100 per request)
        explode: true
        in: query
        name: ids[]
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - $ref: '#/components/parameters/order_1'
        explode: false
        in: query
        name: order
        required: false
        schema:
          properties:
            username:
              enum:
              - asc
              - desc
              type: string
          type: object
        style: deepObject
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: OK
      summary: User list
      tags:
      - User
      x-accepts: application/json
  /user/{id}:
    delete:
      operationId: delete-user-id
      parameters:
      - description: User ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
      summary: Delete User
      tags:
      - User
      x-accepts: application/json
    get:
      operationId: get-user-id
      parameters:
      - description: User ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
      security: []
      summary: Get User
      tags:
      - User
      x-accepts: application/json
  /user/delete/{code}:
    post:
      operationId: post-user-delete-code
      parameters:
      - description: User delete code
        explode: false
        in: path
        name: code
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
      security: []
      summary: Approve User deletion
      tags:
      - User
      x-accepts: application/json
  /user/password:
    post:
      operationId: post-user-password
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/json:
            schema:
              properties:
                oldPassword:
                  maxLength: 1024
                  minLength: 8
                  type: string
                newPassword:
                  maxLength: 1024
                  minLength: 8
                  type: string
              required:
              - newPassword
              - oldPassword
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
      summary: Update User password
      tags:
      - User
      x-contentType: application/json
      x-accepts: application/json
  /user/email:
    post:
      operationId: post-user-email
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          application/json:
            schema:
              properties:
                email:
                  format: email
                  type: string
              required:
              - email
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
      summary: Update User email
      tags:
      - User
      x-contentType: application/json
      x-accepts: application/json
  /chapter:
    get:
      description: Chapter list. If you want the Chapters of a given Manga, please
        check the feed endpoints.
      operationId: get-chapter
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Chapter ids (limited to 100 per request)
        explode: true
        in: query
        name: ids[]
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: title
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: groups[]
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: uploader
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: manga
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: volume[]
        required: false
        schema:
          oneOf:
          - type: string
          - items:
              type: string
            type: array
        style: form
      - explode: true
        in: query
        name: chapter
        required: false
        schema:
          oneOf:
          - type: string
          - items:
              type: string
            type: array
        style: form
      - explode: true
        in: query
        name: translatedLanguage[]
        required: false
        schema:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: originalLanguage[]
        required: false
        schema:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: excludedOriginalLanguage[]
        required: false
        schema:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: contentRating[]
        required: false
        schema:
          default:
          - safe
          - suggestive
          - erotica
          items:
            enum:
            - safe
            - suggestive
            - erotica
            - pornographic
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: includeFutureUpdates
        required: false
        schema:
          default: "1"
          enum:
          - "0"
          - "1"
          type: string
        style: form
      - explode: true
        in: query
        name: createdAtSince
        required: false
        schema:
          description: 'DateTime string with following format: YYYY-MM-DDTHH:MM:SS'
          pattern: ^\d{4}-[0-1]\d-([0-2]\d|3[0-1])T([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$
          type: string
        style: form
      - explode: true
        in: query
        name: updatedAtSince
        required: false
        schema:
          description: 'DateTime string with following format: YYYY-MM-DDTHH:MM:SS'
          pattern: ^\d{4}-[0-1]\d-([0-2]\d|3[0-1])T([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$
          type: string
        style: form
      - explode: true
        in: query
        name: publishAtSince
        required: false
        schema:
          description: 'DateTime string with following format: YYYY-MM-DDTHH:MM:SS'
          pattern: ^\d{4}-[0-1]\d-([0-2]\d|3[0-1])T([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$
          type: string
        style: form
      - $ref: '#/components/parameters/order_2'
        explode: false
        in: query
        name: order
        required: false
        schema:
          properties:
            createdAt:
              enum:
              - asc
              - desc
              type: string
            updatedAt:
              enum:
              - asc
              - desc
              type: string
            publishAt:
              enum:
              - asc
              - desc
              type: string
            volume:
              enum:
              - asc
              - desc
              type: string
            chapter:
              enum:
              - asc
              - desc
              type: string
          type: object
        style: deepObject
      - explode: true
        in: query
        name: includes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterList'
          description: Chapter list
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security: []
      summary: Chapter list
      tags:
      - Chapter
      x-accepts: application/json
  /chapter/{id}:
    delete:
      operationId: delete-chapter-id
      parameters:
      - description: Chapter ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Chapter has been deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Delete Chapter
      tags:
      - Chapter
      x-accepts: application/json
    get:
      operationId: get-chapter-id
      parameters:
      - description: Chapter ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    result: ok
                    data:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      type: chapter
                      attributes:
                        title: string
                        volume: null
                        chapter: null
                        translatedLanguage: ja
                        data:
                        - x1-b765e86d5ecbc932cf3f517a8604f6ac6d8a7f379b0277a117dc7c09c53d041e.png
                        - x2-fc7c198880083b053bf4e8aebfc0eec1adbe52878a6c5ff08d25544a1d5502ef.png
                        - x3-90f15bc8b91deb0dc88473b532e42a99f93ee9e2c8073795c81b01fff428af80.png
                        dataSaver:
                        - x1-ab2b7c8f30c843aa3a53c29bc8c0e204fba4ab3e75985d761921eb6a52ff6159.jpg
                        - x2-3e057d937e01696adce2ac2865f62f6f6a15f03cef43d929b88e99a4b8482e03.jpg
                        - x3-128742088f99806b022bbc8006554456f2a20d0d176d7f3264a65ff9a549d0dd.jpg
                        uploader: 4df808f4-cdf8-4d1c-80e6-4af8e6ce09b8
                        version: 1
                        groups:
                        - 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        manga: e7116dd3-e4ad-4d10-a3ef-6a64d730c341
                      relationships:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        type: string
              schema:
                $ref: '#/components/schemas/ChapterResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Chapter not found
      security: []
      summary: Get Chapter
      tags:
      - Chapter
      x-accepts: application/json
    put:
      operationId: put-chapter-id
      parameters:
      - description: Chapter ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChapterEdit'
        description: The size of the body is limited to 32KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Update Chapter
      tags:
      - Chapter
      x-contentType: application/json
      x-accepts: application/json
  /user/follows/manga/feed:
    get:
      operationId: get-user-follows-manga-feed
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: translatedLanguage[]
        required: false
        schema:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: originalLanguage[]
        required: false
        schema:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: excludedOriginalLanguage[]
        required: false
        schema:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: contentRating[]
        required: false
        schema:
          default:
          - safe
          - suggestive
          - erotica
          items:
            enum:
            - safe
            - suggestive
            - erotica
            - pornographic
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: includeFutureUpdates
        required: false
        schema:
          default: "1"
          enum:
          - "0"
          - "1"
          type: string
        style: form
      - explode: true
        in: query
        name: createdAtSince
        required: false
        schema:
          description: 'DateTime string with following format: YYYY-MM-DDTHH:MM:SS'
          pattern: ^\d{4}-[0-1]\d-([0-2]\d|3[0-1])T([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$
          type: string
        style: form
      - explode: true
        in: query
        name: updatedAtSince
        required: false
        schema:
          description: 'DateTime string with following format: YYYY-MM-DDTHH:MM:SS'
          pattern: ^\d{4}-[0-1]\d-([0-2]\d|3[0-1])T([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$
          type: string
        style: form
      - explode: true
        in: query
        name: publishAtSince
        required: false
        schema:
          description: 'DateTime string with following format: YYYY-MM-DDTHH:MM:SS'
          pattern: ^\d{4}-[0-1]\d-([0-2]\d|3[0-1])T([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$
          type: string
        style: form
      - $ref: '#/components/parameters/order_3'
        explode: false
        in: query
        name: order
        required: false
        schema:
          properties:
            createdAt:
              enum:
              - asc
              - desc
              type: string
            updatedAt:
              enum:
              - asc
              - desc
              type: string
            publishAt:
              enum:
              - asc
              - desc
              type: string
            volume:
              enum:
              - asc
              - desc
              type: string
            chapter:
              enum:
              - asc
              - desc
              type: string
          type: object
        style: deepObject
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          description: User not Found
      summary: Get logged User followed Manga feed (Chapter list)
      tags:
      - Feed
      x-accepts: application/json
  /list/{id}/feed:
    get:
      operationId: get-list-id-feed
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: translatedLanguage[]
        required: false
        schema:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: originalLanguage[]
        required: false
        schema:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: excludedOriginalLanguage[]
        required: false
        schema:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: contentRating[]
        required: false
        schema:
          default:
          - safe
          - suggestive
          - erotica
          items:
            enum:
            - safe
            - suggestive
            - erotica
            - pornographic
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: includeFutureUpdates
        required: false
        schema:
          default: "1"
          enum:
          - "0"
          - "1"
          type: string
        style: form
      - explode: true
        in: query
        name: createdAtSince
        required: false
        schema:
          description: 'DateTime string with following format: YYYY-MM-DDTHH:MM:SS'
          pattern: ^\d{4}-[0-1]\d-([0-2]\d|3[0-1])T([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$
          type: string
        style: form
      - explode: true
        in: query
        name: updatedAtSince
        required: false
        schema:
          description: 'DateTime string with following format: YYYY-MM-DDTHH:MM:SS'
          pattern: ^\d{4}-[0-1]\d-([0-2]\d|3[0-1])T([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$
          type: string
        style: form
      - explode: true
        in: query
        name: publishAtSince
        required: false
        schema:
          description: 'DateTime string with following format: YYYY-MM-DDTHH:MM:SS'
          pattern: ^\d{4}-[0-1]\d-([0-2]\d|3[0-1])T([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$
          type: string
        style: form
      - $ref: '#/components/parameters/order_4'
        explode: false
        in: query
        name: order
        required: false
        schema:
          properties:
            createdAt:
              enum:
              - asc
              - desc
              type: string
            updatedAt:
              enum:
              - asc
              - desc
              type: string
            publishAt:
              enum:
              - asc
              - desc
              type: string
            volume:
              enum:
              - asc
              - desc
              type: string
            chapter:
              enum:
              - asc
              - desc
              type: string
          type: object
        style: deepObject
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security: []
      summary: CustomList Manga feed
      tags:
      - Feed
      x-accepts: application/json
  /manga/{id}/follow:
    delete:
      operationId: delete-manga-id-follow
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Unfollow Manga
      tags:
      - Manga
      x-accepts: application/json
    post:
      operationId: post-manga-id-follow
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Follow Manga
      tags:
      - Manga
      x-accepts: application/json
  /cover:
    get:
      operationId: get-cover
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Manga ids (limited to 100 per request)
        explode: true
        in: query
        name: manga[]
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Covers ids (limited to 100 per request)
        explode: true
        in: query
        name: ids[]
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: User ids (limited to 100 per request)
        explode: true
        in: query
        name: uploaders[]
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - $ref: '#/components/parameters/order_5'
        explode: false
        in: query
        name: order
        required: false
        schema:
          properties:
            createdAt:
              enum:
              - asc
              - desc
              type: string
            updatedAt:
              enum:
              - asc
              - desc
              type: string
            volume:
              enum:
              - asc
              - desc
              type: string
          type: object
        style: deepObject
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoverList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security: []
      summary: CoverArt list
      tags:
      - Cover
      x-accepts: application/json
  /cover/{mangaId}:
    post:
      operationId: upload-cover
      parameters:
      - explode: false
        in: path
        name: mangaId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: multipart/form-data
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
                volume:
                  maxLength: 8
                  nullable: true
                  pattern: ^(0|[1-9]\\d*)((\\.\\d+){1,2})?[a-z]?$
                  type: string
                description:
                  nullable: false
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoverResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      summary: Upload Cover
      tags:
      - Cover
      x-contentType: multipart/form-data
      x-accepts: application/json
  /cover/{coverId}:
    delete:
      operationId: delete-cover
      parameters:
      - explode: false
        in: path
        name: coverId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      summary: Delete Cover
      tags:
      - Cover
      x-accepts: application/json
    get:
      operationId: get-cover-id
      parameters:
      - explode: false
        in: path
        name: coverId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoverResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: CoverArt not found
      security: []
      summary: Get Cover
      tags:
      - Cover
      x-accepts: application/json
    put:
      operationId: edit-cover
      parameters:
      - explode: false
        in: path
        name: coverId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoverEdit'
        description: The size of the body is limited to 2KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoverResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      summary: Edit Cover
      tags:
      - Cover
      x-contentType: application/json
      x-accepts: application/json
  /author:
    get:
      operationId: get-author
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Author ids (limited to 100 per request)
        explode: true
        in: query
        name: ids[]
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - $ref: '#/components/parameters/order_6'
        explode: false
        in: query
        name: order
        required: false
        schema:
          properties:
            name:
              enum:
              - asc
              - desc
              type: string
          type: object
        style: deepObject
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security: []
      summary: Author list
      tags:
      - Author
      x-accepts: application/json
    post:
      operationId: post-author
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorCreate'
        description: The size of the body is limited to 2KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      summary: Create Author
      tags:
      - Author
      x-contentType: application/json
      x-accepts: application/json
  /author/{id}:
    delete:
      operationId: delete-author-id
      parameters:
      - description: Author ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Delete Author
      tags:
      - Author
      x-accepts: application/json
    get:
      operationId: get-author-id
      parameters:
      - description: Author ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Author no content
      security: []
      summary: Get Author
      tags:
      - Author
      x-accepts: application/json
    put:
      operationId: put-author-id
      parameters:
      - description: Author ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorEdit'
        description: The size of the body is limited to 2KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Update Author
      tags:
      - Author
      x-contentType: application/json
      x-accepts: application/json
  /legacy/mapping:
    post:
      operationId: post-legacy-mapping
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MappingIdBody'
        description: The size of the body is limited to 10KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MappingIdResponse'
          description: This response will give you an array of mappings of resource
            identifiers ; the `data.attributes.newId` field corresponds to the new
            UUID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      security: []
      summary: Legacy ID mapping
      tags:
      - Legacy
      x-contentType: application/json
      x-accepts: application/json
  /manga/{id}/feed:
    get:
      operationId: get-manga-id-feed
      parameters:
      - description: Manga ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: translatedLanguage[]
        required: false
        schema:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: originalLanguage[]
        required: false
        schema:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: excludedOriginalLanguage[]
        required: false
        schema:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: contentRating[]
        required: false
        schema:
          default:
          - safe
          - suggestive
          - erotica
          items:
            enum:
            - safe
            - suggestive
            - erotica
            - pornographic
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: includeFutureUpdates
        required: false
        schema:
          default: "1"
          type: string
        style: form
      - explode: true
        in: query
        name: createdAtSince
        required: false
        schema:
          description: 'DateTime string with following format: YYYY-MM-DDTHH:MM:SS'
          pattern: ^\d{4}-[0-1]\d-([0-2]\d|3[0-1])T([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$
          type: string
        style: form
      - explode: true
        in: query
        name: updatedAtSince
        required: false
        schema:
          description: 'DateTime string with following format: YYYY-MM-DDTHH:MM:SS'
          pattern: ^\d{4}-[0-1]\d-([0-2]\d|3[0-1])T([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$
          type: string
        style: form
      - explode: true
        in: query
        name: publishAtSince
        required: false
        schema:
          description: 'DateTime string with following format: YYYY-MM-DDTHH:MM:SS'
          pattern: ^\d{4}-[0-1]\d-([0-2]\d|3[0-1])T([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$
          type: string
        style: form
      - $ref: '#/components/parameters/order_7'
        explode: false
        in: query
        name: order
        required: false
        schema:
          properties:
            createdAt:
              enum:
              - asc
              - desc
              type: string
            updatedAt:
              enum:
              - asc
              - desc
              type: string
            publishAt:
              enum:
              - asc
              - desc
              type: string
            volume:
              enum:
              - asc
              - desc
              type: string
            chapter:
              enum:
              - asc
              - desc
              type: string
          type: object
        style: deepObject
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      security: []
      summary: Manga feed
      tags:
      - Manga
      x-accepts: application/json
  /manga/{id}/read:
    get:
      description: A list of chapter ids that are marked as read for the specified
        manga
      operationId: get-manga-chapter-readmarkers
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    result: ok
                    data:
                    - 00057883-357b-4734-9469-52967e59ef4c
                    - 000b7978-d9bd-49ec-a8f6-a0737368415f
                    - 0015b621-a175-47f5-81fb-5976c88e18c4
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: OK
      summary: Manga read markers
      tags:
      - ChapterReadMarker
      x-accepts: application/json
    post:
      description: Send a lot of chapter ids for one manga to mark as read and/or
        unread
      operationId: post-manga-chapter-readmarkers
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChapterReadMarkerBatch'
        description: The size of the body is limited to 10KB.
      responses:
        "200":
          content:
            application/json:
              examples:
                example:
                  value:
                    result: ok
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: OK
      summary: Manga read markers batch
      tags:
      - ChapterReadMarker
      x-contentType: application/json
      x-accepts: application/json
  /manga/read:
    get:
      description: A list of chapter ids that are marked as read for the given manga
        ids
      operationId: get-manga-chapter-readmarkers-2
      parameters:
      - description: Manga ids
        explode: true
        in: query
        name: ids[]
        required: true
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Group results by manga ids
        explode: true
        in: query
        name: grouped
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                example-default:
                  value:
                    result: ok
                    data:
                    - 00057883-357b-4734-9469-52967e59ef4c
                    - 000b7978-d9bd-49ec-a8f6-a0737368415f
                    - 0015b621-a175-47f5-81fb-5976c88e18c4
                example-grouped:
                  value:
                    result: ok
                    data:
                      "40529c30-0d25-4da5-a25a-f71a961ab855":
                      - 00057883-357b-4734-9469-52967e59ef4c
                      - 000b7978-d9bd-49ec-a8f6-a0737368415f
                      - 0015b621-a175-47f5-81fb-5976c88e18c4
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: OK
      summary: Manga read markers
      tags:
      - ChapterReadMarker
      x-accepts: application/json
  /chapter/{id}/read:
    delete:
      description: Mark chapter as unread for the current user
      operationId: chapter-id-unread
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: OK
        "401":
          description: Unauthorized
      summary: Mark Chapter unread
      tags:
      - ChapterReadMarker
      x-accepts: application/json
    post:
      description: Mark chapter as read for the current user
      operationId: chapter-id-read
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: OK
        "401":
          description: Unauthorized
      summary: Mark Chapter read
      tags:
      - ChapterReadMarker
      x-accepts: application/json
  /manga/random:
    get:
      operationId: get-manga-random
      parameters:
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MangaResponse'
          description: OK
      security: []
      summary: Get a random Manga
      tags:
      - Manga
      x-accepts: application/json
  /at-home/server/{chapterId}:
    get:
      operationId: get-at-home-server-chapterId
      parameters:
      - description: Chapter ID
        explode: false
        in: path
        name: chapterId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: |-
          Force selecting from MangaDex@Home servers that use the standard HTTPS port 443.

          While the conventional port for HTTPS traffic is 443 and servers are encouraged to use it, it is not a hard requirement as it technically isn't
          anything special.

          However, some misbehaving school/office network will at time block traffic to non-standard ports, and setting this flag to `true` will ensure
          selection of a server that uses these.
        explode: true
        in: query
        name: forcePort443
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security: []
      summary: Get MangaDex@Home server URL
      tags:
      - AtHome
      x-accepts: application/json
  /manga/tag:
    get:
      operationId: get-manga-tag
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
          description: OK
      security: []
      summary: Tag list
      tags:
      - Manga
      x-accepts: application/json
  /account/activate/resend:
    post:
      operationId: post-account-activate-resend
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendAccountActivationCode'
        description: The size of the body is limited to 1KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountActivateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      security: []
      summary: Resend Activation code
      tags:
      - Account
      x-contentType: application/json
      x-accepts: application/json
  /account/recover:
    post:
      description: You can only request Account Recovery once per Hour for the same
        Email Address
      operationId: post-account-recover
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendAccountActivationCode'
        description: The size of the body is limited to 1KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountActivateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/'
          description: Bad Request
      security: []
      summary: Recover given Account
      tags:
      - Account
      x-contentType: application/json
      x-accepts: application/json
  /account/recover/{code}:
    post:
      operationId: post-account-recover-code
      parameters:
      - explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoverCompleteBody'
        description: The size of the body is limited to 2KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountActivateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      security: []
      summary: Complete Account recover
      tags:
      - Account
      x-contentType: application/json
      x-accepts: application/json
  /user/me:
    get:
      operationId: get-user-me
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
      summary: Logged User details
      tags:
      - User
      x-accepts: application/json
  /user/follows/group:
    get:
      operationId: get-user-follows-group
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanlationGroupList'
          description: OK
      summary: Get logged User followed Groups
      tags:
      - Follows
      x-accepts: application/json
  /user/follows/group/{id}:
    get:
      operationId: get-user-follows-group-id
      parameters:
      - description: Scanlation Group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: The User follow that Group
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: The User doesn't follow that Group
      summary: Check if logged User follows a Group
      tags:
      - Follows
      x-accepts: application/json
  /user/follows/user:
    get:
      operationId: get-user-follows-user
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: OK
      summary: Get logged User followed User list
      tags:
      - Follows
      x-accepts: application/json
  /user/follows/user/{id}:
    get:
      operationId: get-user-follows-group-id
      parameters:
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: The User follow that User
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: The User doesn't follow that User
      summary: Check if logged User follows a User
      tags:
      - Follows
      x-accepts: application/json
  /user/follows/manga:
    get:
      operationId: get-user-follows-manga
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MangaList'
          description: OK
      summary: Get logged User followed Manga list
      tags:
      - Follows
      x-accepts: application/json
  /user/follows/manga/{id}:
    get:
      operationId: get-user-follows-manga-id
      parameters:
      - description: Manga id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: The User follow that Manga
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: The User doesn't follow that Manga
      summary: Check if logged User follows a Manga
      tags:
      - Follows
      x-accepts: application/json
  /manga/status:
    get:
      operationId: get-manga-status
      parameters:
      - description: Used to filter the list by given status
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - reading
          - on_hold
          - plan_to_read
          - dropped
          - re_reading
          - completed
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                unfiltered:
                  summary: /manga/status
                  value:
                    result: ok
                    statuses:
                      b019ea5d-5fe6-44d4-abbc-f546f210884d: reading
                      "2394a5c7-1d2e-461f-acde-18726b9e37d6": dropped
                filtered:
                  summary: /manga/status?status=reading
                  value:
                    result: ok
                    statuses:
                      b019ea5d-5fe6-44d4-abbc-f546f210884d: reading
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
          description: OK
      summary: Get all Manga reading status for logged User
      tags:
      - Manga
      x-accepts: application/json
  /manga/{id}/status:
    get:
      operationId: get-manga-id-status
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Get a Manga reading status
      tags:
      - Manga
      x-accepts: application/json
    post:
      operationId: post-manga-id-status
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMangaStatus'
        description: Using a `null` value in `status` field will remove the Manga
          reading status. The size of the body is limited to 2KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Update Manga reading status
      tags:
      - Manga
      x-contentType: application/json
      x-accepts: application/json
  /manga/draft/{id}:
    get:
      operationId: get-manga-id-draft
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MangaResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - Bearer: []
      summary: Get a specific Manga Draft
      tags:
      - Manga
      x-accepts: application/json
  /manga/draft/{id}/commit:
    post:
      operationId: commit-manga-draft
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_3'
        content:
          application/json:
            schema:
              additionalProperties: false
              properties:
                version:
                  minimum: 1
                  type: integer
              type: object
        description: A Manga Draft that is to be submitted must have at least one
          cover, must be in the "draft" state and must be passed the correct version
          in the request body.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MangaResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: BadRequest
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - Bearer: []
      summary: Submit a Manga Draft
      tags:
      - Manga
      x-contentType: application/json
      x-accepts: application/json
  /manga/draft:
    get:
      operationId: get-manga-drafts
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: user
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - draft
          - submitted
          - rejected
          type: string
        style: form
      - $ref: '#/components/parameters/order_8'
        explode: false
        in: query
        name: order
        required: false
        schema:
          default:
            createdAt: desc
          properties:
            title:
              enum:
              - asc
              - desc
              type: string
            year:
              enum:
              - asc
              - desc
              type: string
            createdAt:
              enum:
              - asc
              - desc
              type: string
            updatedAt:
              enum:
              - asc
              - desc
              type: string
          type: object
        style: deepObject
      - explode: true
        in: query
        name: includes[]
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MangaResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      security:
      - Bearer: []
      summary: Get a list of Manga Drafts
      tags:
      - Manga
      x-accepts: application/json
  /captcha/solve:
    post:
      description: |-
        Captchas can be solved explicitly through this endpoint, another way is to add a `X-Captcha-Result` header to any request. The same logic will verify the captcha and is probably more convenient because it takes one less request.

        Authentication is optional. Captchas are tracked for both the client ip and for the user id, if you are logged in you want to send your session token but that is not required.
      operationId: post-captcha-solve
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_4'
        content:
          application/json:
            examples:
              example-1:
                value:
                  captchaChallenge: string
            schema:
              properties:
                captchaChallenge:
                  minLength: 1
                  type: string
              required:
              - captchaChallenge
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: 'OK: Captcha has been solved'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 'Bad Request: Captcha challenge result was wrong, the Captcha
            Verification service was down or other, refer to the error message and
            the errorCode inside the error context'
      security:
      - Bearer: []
      summary: Solve Captcha
      tags:
      - Captcha
      x-contentType: application/json
      x-accepts: application/json
  /report/reasons/{category}:
    get:
      operationId: get-report-reasons-by-category
      parameters:
      - explode: false
        in: path
        name: category
        required: true
        schema:
          enum:
          - manga
          - chapter
          - scanlation_group
          - user
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Get a list of report reasons
      tags:
      - Report
      x-accepts: application/json
  /report:
    post:
      operationId: post-report
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_5'
        content:
          application/json:
            schema:
              properties:
                category:
                  enum:
                  - manga
                  - chapter
                  - user
                  - scanlation_group
                  type: string
                reason:
                  format: uuid
                  maxLength: 36
                  minLength: 36
                  type: string
                objectId:
                  format: uuid
                  maxLength: 36
                  minLength: 36
                  type: string
                details:
                  type: string
              type: object
        description: The size of the body is limited to 8KB.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Create a new Report
      tags:
      - Report
      x-contentType: application/json
      x-accepts: application/json
  /upload:
    get:
      operationId: get-upload-session
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSession'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Get the current User upload session
      tags:
      - Upload
      x-accepts: application/json
  /upload/begin:
    post:
      operationId: begin-upload-session
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeginUploadSession'
        description: The size of the body is limited to 4KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSession'
          description: OK
      summary: Start an upload session
      tags:
      - Upload
      x-contentType: application/json
      x-accepts: application/json
  /upload/begin/{chapterId}:
    post:
      operationId: begin-edit-session
      parameters:
      - explode: false
        in: path
        name: chapterId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeginEditSession'
        description: The size of the body is limited to 1KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSession'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request if Chapter's Manga is unpublished
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized if user does not have upload permissions or has
            no rights to edit the chapter (needs to be uploader or group member)
      summary: Start an edit chapter session
      tags:
      - Upload
      x-contentType: application/json
      x-accepts: application/json
  /upload/{uploadSessionId}:
    delete:
      operationId: abandon-upload-session
      parameters:
      - explode: false
        in: path
        name: uploadSessionId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
      summary: Abandon upload session
      tags:
      - Upload
      x-accepts: application/json
    post:
      operationId: put-upload-session-file
      parameters:
      - explode: false
        in: path
        name: uploadSessionId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_6'
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      summary: Upload images to the upload session
      tags:
      - Upload
      x-contentType: multipart/form-data
      x-accepts: application/json
  /upload/{uploadSessionId}/commit:
    post:
      operationId: commit-upload-session
      parameters:
      - explode: false
        in: path
        name: uploadSessionId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitUploadSession'
        description: The size of the body is limited to 4KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chapter'
          description: OK
      summary: Commit the upload session and specify chapter data
      tags:
      - Upload
      x-contentType: application/json
      x-accepts: application/json
  /upload/{uploadSessionId}/{uploadSessionFileId}:
    delete:
      operationId: delete-uploaded-session-file
      parameters:
      - explode: false
        in: path
        name: uploadSessionId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uploadSessionFileId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
      summary: Delete an uploaded image from the Upload Session
      tags:
      - Upload
      x-accepts: application/json
  /upload/{uploadSessionId}/batch:
    delete:
      operationId: delete-uploaded-session-files
      parameters:
      - explode: false
        in: path
        name: uploadSessionId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: uuid
                minItems: 1
                type: string
              type: array
        description: The size of the body is limited to 20KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
      summary: Delete a set of uploaded images from the Upload Session
      tags:
      - Upload
      x-contentType: application/json
      x-accepts: application/json
  /manga/{mangaId}/relation:
    get:
      operationId: get-manga-relation
      parameters:
      - explode: false
        in: path
        name: mangaId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MangaRelationList'
          description: Manga relation list
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      security: []
      summary: Manga relation list
      tags:
      - Manga
      x-accepts: application/json
    post:
      description: Create a new Manga relation.
      operationId: post-manga-relation
      parameters:
      - explode: false
        in: path
        name: mangaId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MangaRelationCreate'
        description: The size of the body is limited to 8KB.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MangaRelationResponse'
          description: Manga relation created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      summary: Create Manga relation
      tags:
      - Manga
      x-contentType: application/json
      x-accepts: application/json
  /manga/{mangaId}/relation/{id}:
    delete:
      operationId: delete-manga-relation-id
      parameters:
      - explode: false
        in: path
        name: mangaId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Manga relation has been deleted.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
      summary: Delete Manga relation
      tags:
      - Manga
      x-accepts: application/json
components:
  requestBodies:
    inline_object_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_1'
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
    inline_object_6:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object_6'
    inline_object_5:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_5'
    inline_object_4:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_4'
    inline_object_3:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_3'
    inline_object_2:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object_2'
  schemas:
    MangaRequest:
      properties:
        title:
          additionalProperties:
            pattern: ^[a-z]{2,8}$
            type: string
          example:
            en: This is a localized string
            fr: C'est une chaine traduite
          title: LocalizedString
          type: object
        altTitles:
          items:
            $ref: '#/components/schemas/LocalizedString'
          type: array
        description:
          additionalProperties:
            pattern: ^[a-z]{2,8}$
            type: string
          example:
            en: This is a localized string
            fr: C'est une chaine traduite
          title: LocalizedString
          type: object
        authors:
          items:
            format: uuid
            type: string
          type: array
        artists:
          items:
            format: uuid
            type: string
          type: array
        links:
          additionalProperties:
            type: string
          type: object
        originalLanguage:
          pattern: ^[a-zA-Z\-]{2,5}$
          type: string
        lastVolume:
          nullable: true
          type: string
        lastChapter:
          nullable: true
          type: string
        publicationDemographic:
          enum:
          - shounen
          - shoujo
          - josei
          - seinen
          nullable: true
          type: string
        status:
          enum:
          - ongoing
          - completed
          - hiatus
          - cancelled
          type: string
        year:
          description: Year of release
          maximum: 9999
          minimum: 1
          nullable: true
          type: integer
        contentRating:
          enum:
          - safe
          - suggestive
          - erotica
          - pornographic
          type: string
        tags:
          items:
            format: uuid
            type: string
          type: array
        primaryCover:
          format: uuid
          nullable: true
          type: string
        version:
          minimum: 1
          type: integer
      title: MangaRequest
      type: object
    LocalizedString:
      additionalProperties:
        pattern: ^[a-z]{2,8}$
        type: string
      example:
        en: This is a localized string
        fr: C'est une chaine traduite
      title: LocalizedString
      type: object
    MangaResponse:
      example:
        result: ok
        data:
          relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            lastVolume: lastVolume
            year: 0
            description:
              en: This is a localized string
              fr: C'est une chaine traduite
            title:
              en: This is a localized string
              fr: C'est une chaine traduite
            originalLanguage: originalLanguage
            lastChapter: lastChapter
            version: 1
            tags:
            - relationships:
              - related: monochrome
                attributes: '{}'
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                type: type
              - related: monochrome
                attributes: '{}'
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                type: type
              attributes:
                name:
                  en: This is a localized string
                  fr: C'est une chaine traduite
                description:
                  en: This is a localized string
                  fr: C'est une chaine traduite
                version: 1
                group: group
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: tag
            - relationships:
              - related: monochrome
                attributes: '{}'
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                type: type
              - related: monochrome
                attributes: '{}'
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                type: type
              attributes:
                name:
                  en: This is a localized string
                  fr: C'est une chaine traduite
                description:
                  en: This is a localized string
                  fr: C'est une chaine traduite
                version: 1
                group: group
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: tag
            altTitles:
            - en: This is a localized string
              fr: C'est une chaine traduite
            - en: This is a localized string
              fr: C'est une chaine traduite
            publicationDemographic: shounen
            createdAt: createdAt
            isLocked: true
            links:
              key: links
            contentRating: safe
            state: draft
            status: status
            updatedAt: updatedAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: manga
        response: entity
      properties:
        result:
          enum:
          - ok
          - error
          type: string
        response:
          default: entity
          type: string
        data:
          $ref: '#/components/schemas/Manga'
      title: MangaResponse
      type: object
    ChapterResponse:
      example:
        result: ok
        data:
          relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            chapter: chapter
            externalUrl: externalUrl
            data:
            - data
            - data
            publishAt: publishAt
            translatedLanguage: translatedLanguage
            title: title
            version: 1
            dataSaver:
            - dataSaver
            - dataSaver
            volume: volume
            createdAt: createdAt
            uploader: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            hash: hash
            updatedAt: updatedAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: chapter
        response: entity
      properties:
        result:
          enum:
          - ok
          - error
          type: string
        response:
          default: entity
          type: string
        data:
          $ref: '#/components/schemas/Chapter'
      title: ChapterResponse
      type: object
    Relationship:
      example:
        related: monochrome
        attributes: '{}'
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
      properties:
        id:
          format: uuid
          type: string
        type:
          type: string
        related:
          description: Related Manga type, only present if you are on a Manga entity
            and a Manga relationship
          enum:
          - monochrome
          - main_story
          - adapted_from
          - based_on
          - prequel
          - side_story
          - doujinshi
          - same_franchise
          - shared_universe
          - sequel
          - spin_off
          - alternate_story
          - preserialization
          - colored
          - serialization
          type: string
        attributes:
          description: If Reference Expansion is applied, contains objects attributes
          nullable: true
          type: object
      title: Relationship
      type: object
    Chapter:
      example:
        relationships:
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        attributes:
          chapter: chapter
          externalUrl: externalUrl
          data:
          - data
          - data
          publishAt: publishAt
          translatedLanguage: translatedLanguage
          title: title
          version: 1
          dataSaver:
          - dataSaver
          - dataSaver
          volume: volume
          createdAt: createdAt
          uploader: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          hash: hash
          updatedAt: updatedAt
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: chapter
      properties:
        id:
          format: uuid
          type: string
        type:
          enum:
          - chapter
          type: string
        attributes:
          $ref: '#/components/schemas/ChapterAttributes'
        relationships:
          items:
            $ref: '#/components/schemas/Relationship'
          type: array
      title: Chapter
      type: object
      x-examples:
        example:
          id: a05de006-df86-4fe1-9d20-32664a78c1cc
          type: chapter
          attributes:
            title: Chapter title
            volume: 1
            chapter: "15.1"
            uploader:
              id: 23d52040-3a77-4ffe-84dd-6dbf259e32ed
              type: user
              attributes: []
            manga:
              id: 439ea5a9-e922-44d1-b9c1-a3e1158bd55f
              type: manga
              attributes: []
            groups:
            - id: cb4cf9ac-ee21-486f-ab0f-21b17ba0ab7f
              type: scanlation_group
              attributes: []
            translatedLanguage: en
            externalUrl: http://some-external-url.tld
            data:
            - x1-b765e86d5ecbc932cf3f517a8604f6ac6d8a7f379b0277a117dc7c09c53d041e.png
            - x2-fc7c198880083b053bf4e8aebfc0eec1adbe52878a6c5ff08d25544a1d5502ef.png
            - x3-90f15bc8b91deb0dc88473b532e42a99f93ee9e2c8073795c81b01fff428af80.png
            dataSaver:
            - x1-ab2b7c8f30c843aa3a53c29bc8c0e204fba4ab3e75985d761921eb6a52ff6159.jpg
            - x2-3e057d937e01696adce2ac2865f62f6f6a15f03cef43d929b88e99a4b8482e03.jpg
            - x3-128742088f99806b022bbc8006554456f2a20d0d176d7f3264a65ff9a549d0dd.jpg
            version: 1
    Manga:
      example:
        relationships:
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        attributes:
          lastVolume: lastVolume
          year: 0
          description:
            en: This is a localized string
            fr: C'est une chaine traduite
          title:
            en: This is a localized string
            fr: C'est une chaine traduite
          originalLanguage: originalLanguage
          lastChapter: lastChapter
          version: 1
          tags:
          - relationships:
            - related: monochrome
              attributes: '{}'
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: type
            - related: monochrome
              attributes: '{}'
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: type
            attributes:
              name:
                en: This is a localized string
                fr: C'est une chaine traduite
              description:
                en: This is a localized string
                fr: C'est une chaine traduite
              version: 1
              group: group
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: tag
          - relationships:
            - related: monochrome
              attributes: '{}'
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: type
            - related: monochrome
              attributes: '{}'
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: type
            attributes:
              name:
                en: This is a localized string
                fr: C'est une chaine traduite
              description:
                en: This is a localized string
                fr: C'est une chaine traduite
              version: 1
              group: group
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: tag
          altTitles:
          - en: This is a localized string
            fr: C'est une chaine traduite
          - en: This is a localized string
            fr: C'est une chaine traduite
          publicationDemographic: shounen
          createdAt: createdAt
          isLocked: true
          links:
            key: links
          contentRating: safe
          state: draft
          status: status
          updatedAt: updatedAt
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: manga
      properties:
        id:
          format: uuid
          type: string
        type:
          enum:
          - manga
          type: string
        attributes:
          $ref: '#/components/schemas/MangaAttributes'
        relationships:
          items:
            $ref: '#/components/schemas/Relationship'
          type: array
      title: Manga
      type: object
      x-examples:
        example:
          id: a05de006-df86-4fe1-9d20-32664a78c1cc
          type: manga
          attributes:
            title:
              en: English title
              de: Deutscher Titel
              ja: 日本語題名
            altTitles:
            - en: Secondary english title
            - en: Third english title
            - romaji: Romaji title
            description:
              en: Nice description
            isLocked: false
            originalLanguage: ja
            year: 2020
            version: 1
    ErrorResponse:
      properties:
        result:
          default: error
          type: string
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
      title: ErrorResponse
      type: object
    Error:
      example:
        id: id
        detail: detail
        title: title
        status: 0
      properties:
        id:
          type: string
        status:
          type: integer
        title:
          type: string
        detail:
          type: string
      title: Error
      type: object
    ChapterAttributes:
      example:
        chapter: chapter
        externalUrl: externalUrl
        data:
        - data
        - data
        publishAt: publishAt
        translatedLanguage: translatedLanguage
        title: title
        version: 1
        dataSaver:
        - dataSaver
        - dataSaver
        volume: volume
        createdAt: createdAt
        uploader: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        hash: hash
        updatedAt: updatedAt
      properties:
        title:
          maxLength: 255
          type: string
        volume:
          nullable: true
          type: string
        chapter:
          maxLength: 8
          nullable: true
          type: string
        translatedLanguage:
          pattern: ^[a-zA-Z\-]{2,5}$
          type: string
        hash:
          type: string
        data:
          items:
            type: string
          type: array
        dataSaver:
          items:
            type: string
          type: array
        uploader:
          format: uuid
          type: string
        externalUrl:
          description: While hash, data and dataSaver attributes are empty, denotes
            a chapter that links to an external source.
          maxLength: 512
          nullable: true
          pattern: ^https?://
          type: string
        version:
          minimum: 1
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
        publishAt:
          type: string
      title: ChapterAttributes
      type: object
    MangaAttributes:
      example:
        lastVolume: lastVolume
        year: 0
        description:
          en: This is a localized string
          fr: C'est une chaine traduite
        title:
          en: This is a localized string
          fr: C'est une chaine traduite
        originalLanguage: originalLanguage
        lastChapter: lastChapter
        version: 1
        tags:
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            name:
              en: This is a localized string
              fr: C'est une chaine traduite
            description:
              en: This is a localized string
              fr: C'est une chaine traduite
            version: 1
            group: group
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: tag
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            name:
              en: This is a localized string
              fr: C'est une chaine traduite
            description:
              en: This is a localized string
              fr: C'est une chaine traduite
            version: 1
            group: group
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: tag
        altTitles:
        - en: This is a localized string
          fr: C'est une chaine traduite
        - en: This is a localized string
          fr: C'est une chaine traduite
        publicationDemographic: shounen
        createdAt: createdAt
        isLocked: true
        links:
          key: links
        contentRating: safe
        state: draft
        status: status
        updatedAt: updatedAt
      properties:
        title:
          additionalProperties:
            pattern: ^[a-z]{2,8}$
            type: string
          example:
            en: This is a localized string
            fr: C'est une chaine traduite
          title: LocalizedString
          type: object
        altTitles:
          items:
            $ref: '#/components/schemas/LocalizedString'
          type: array
        description:
          additionalProperties:
            pattern: ^[a-z]{2,8}$
            type: string
          example:
            en: This is a localized string
            fr: C'est une chaine traduite
          title: LocalizedString
          type: object
        isLocked:
          type: boolean
        links:
          additionalProperties:
            type: string
          type: object
        originalLanguage:
          type: string
        lastVolume:
          nullable: true
          type: string
        lastChapter:
          nullable: true
          type: string
        publicationDemographic:
          enum:
          - shounen
          - shoujo
          - josei
          - seinen
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        year:
          description: Year of release
          nullable: true
          type: integer
        contentRating:
          enum:
          - safe
          - suggestive
          - erotica
          - pornographic
          type: string
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        state:
          enum:
          - draft
          - submitted
          - published
          - rejected
          type: string
        version:
          minimum: 1
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
      title: MangaAttributes
      type: object
    MangaCreate:
      allOf:
      - $ref: '#/components/schemas/MangaRequest'
      - required:
        - contentRating
        - originalLanguage
        - status
        - title
    MangaEdit:
      allOf:
      - $ref: '#/components/schemas/MangaRequest'
      - required:
        - version
    ChapterEdit:
      allOf:
      - $ref: '#/components/schemas/ChapterRequest'
      - required:
        - version
    Response:
      example:
        result: ok
      properties:
        result:
          enum:
          - ok
          - error
          type: string
      title: Response
      type: object
    Login:
      additionalProperties: false
      example:
        password: password
        email: email
        username: username
      properties:
        username:
          maxLength: 64
          minLength: 1
          type: string
        email:
          type: string
        password:
          maxLength: 1024
          minLength: 8
          type: string
      required:
      - password
      title: Login
      type: object
    LoginResponse:
      example:
        result: ok
        token:
          session: session
          refresh: refresh
      properties:
        result:
          enum:
          - ok
          - error
          type: string
        token:
          $ref: '#/components/schemas/LoginResponse_token'
      title: LoginResponse
      type: object
    CheckResponse:
      example:
        result: ok
        permissions:
        - permissions
        - permissions
        roles:
        - roles
        - roles
        isAuthenticated: true
      properties:
        result:
          default: ok
          type: string
        isAuthenticated:
          type: boolean
        roles:
          items:
            type: string
          type: array
        permissions:
          items:
            type: string
          type: array
      title: CheckResponse
      type: object
    LogoutResponse:
      example:
        result: ok
      properties:
        result:
          enum:
          - ok
          - error
          type: string
      title: LogoutResponse
      type: object
    RefreshToken:
      additionalProperties: false
      example:
        token: token
      properties:
        token:
          minLength: 1
          type: string
      required:
      - token
      title: RefreshToken
      type: object
    RefreshResponse:
      example:
        result: ok
        message: message
        token:
          session: session
          refresh: refresh
      properties:
        result:
          enum:
          - ok
          - error
          type: string
        token:
          $ref: '#/components/schemas/LoginResponse_token'
        message:
          type: string
      required:
      - result
      title: RefreshResponse
      type: object
    AccountActivateResponse:
      example:
        result: ok
      properties:
        result:
          enum:
          - ok
          type: string
      title: AccountActivateResponse
      type: object
    CreateAccount:
      example:
        password: password
        email: email
        username: username
      properties:
        username:
          maxLength: 64
          minLength: 1
          type: string
        password:
          maxLength: 1024
          minLength: 8
          type: string
        email:
          format: email
          type: string
      required:
      - email
      - password
      - username
      title: CreateAccount
      type: object
    ScanlationGroupResponse:
      example:
        result: ok
        data:
          relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            altNames:
            - en: This is a localized string
              fr: C'est une chaine traduite
            - en: This is a localized string
              fr: C'est une chaine traduite
            website: website
            contactEmail: contactEmail
            description: description
            official: true
            version: 1
            createdAt: createdAt
            twitter: https://openapi-generator.tech
            discord: discord
            name: name
            ircChannel: ircChannel
            ircServer: ircServer
            locked: true
            focusedLanguage:
            - focusedLanguage
            - focusedLanguage
            updatedAt: updatedAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: scanlation_group
        response: entity
      properties:
        result:
          enum:
          - ok
          type: string
        response:
          default: entity
          type: string
        data:
          $ref: '#/components/schemas/ScanlationGroup'
      title: ScanlationGroupResponse
      type: object
    ScanlationGroup:
      example:
        relationships:
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        attributes:
          altNames:
          - en: This is a localized string
            fr: C'est une chaine traduite
          - en: This is a localized string
            fr: C'est une chaine traduite
          website: website
          contactEmail: contactEmail
          description: description
          official: true
          version: 1
          createdAt: createdAt
          twitter: https://openapi-generator.tech
          discord: discord
          name: name
          ircChannel: ircChannel
          ircServer: ircServer
          locked: true
          focusedLanguage:
          - focusedLanguage
          - focusedLanguage
          updatedAt: updatedAt
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: scanlation_group
      properties:
        id:
          format: uuid
          type: string
        type:
          enum:
          - scanlation_group
          type: string
        attributes:
          $ref: '#/components/schemas/ScanlationGroupAttributes'
        relationships:
          items:
            $ref: '#/components/schemas/Relationship'
          type: array
      title: ScanlationGroup
      type: object
    ScanlationGroupAttributes:
      example:
        altNames:
        - en: This is a localized string
          fr: C'est une chaine traduite
        - en: This is a localized string
          fr: C'est une chaine traduite
        website: website
        contactEmail: contactEmail
        description: description
        official: true
        version: 1
        createdAt: createdAt
        twitter: https://openapi-generator.tech
        discord: discord
        name: name
        ircChannel: ircChannel
        ircServer: ircServer
        locked: true
        focusedLanguage:
        - focusedLanguage
        - focusedLanguage
        updatedAt: updatedAt
      properties:
        name:
          type: string
        altNames:
          items:
            $ref: '#/components/schemas/LocalizedString'
          type: array
        website:
          nullable: true
          type: string
        ircServer:
          nullable: true
          type: string
        ircChannel:
          nullable: true
          type: string
        discord:
          nullable: true
          type: string
        contactEmail:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        twitter:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        focusedLanguage:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          nullable: true
          type: array
        locked:
          type: boolean
        official:
          type: boolean
        version:
          minimum: 1
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
      title: ScanlationGroupAttributes
      type: object
    User:
      example:
        relationships:
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        attributes:
          roles:
          - roles
          - roles
          version: 1
          username: username
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: user
      properties:
        id:
          format: uuid
          type: string
        type:
          enum:
          - user
          type: string
        attributes:
          $ref: '#/components/schemas/UserAttributes'
        relationships:
          items:
            $ref: '#/components/schemas/Relationship'
          type: array
      title: User
      type: object
    UserAttributes:
      example:
        roles:
        - roles
        - roles
        version: 1
        username: username
      properties:
        username:
          type: string
        roles:
          items:
            type: string
          type: array
        version:
          minimum: 1
          type: integer
      title: UserAttributes
      type: object
    CreateScanlationGroup:
      example:
        website: website
        twitter: https://openapi-generator.tech
        discord: discord
        contactEmail: contactEmail
        name: name
        ircChannel: ircChannel
        description: description
        ircServer: ircServer
      properties:
        name:
          type: string
        website:
          nullable: true
          type: string
        ircServer:
          nullable: true
          type: string
        ircChannel:
          nullable: true
          type: string
        discord:
          nullable: true
          type: string
        contactEmail:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        twitter:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
      required:
      - name
      title: CreateScanlationGroup
      type: object
    ScanlationGroupEdit:
      example:
        leader: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        website: website
        contactEmail: contactEmail
        description: description
        version: 1
        twitter: https://openapi-generator.tech
        discord: discord
        focusedLanguages:
        - focusedLanguages
        - focusedLanguages
        members:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        ircChannel: ircChannel
        ircServer: ircServer
        locked: true
      properties:
        name:
          type: string
        leader:
          format: uuid
          type: string
        members:
          items:
            format: uuid
            type: string
          type: array
        website:
          nullable: true
          type: string
        ircServer:
          nullable: true
          type: string
        ircChannel:
          nullable: true
          type: string
        discord:
          nullable: true
          type: string
        contactEmail:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        twitter:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        focusedLanguages:
          items:
            pattern: ^[a-zA-Z\-]{2,5}$
            type: string
          nullable: true
          type: array
        locked:
          type: boolean
        version:
          minimum: 1
          type: integer
      required:
      - version
      title: ScanlationGroupEdit
      type: object
    CustomListCreate:
      example:
        visibility: public
        name: name
        manga:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        version: 1
      properties:
        name:
          type: string
        visibility:
          enum:
          - public
          - private
          type: string
        manga:
          items:
            format: uuid
            type: string
          type: array
        version:
          minimum: 1
          type: integer
      required:
      - name
      title: CustomListCreate
      type: object
    CustomListEdit:
      example:
        visibility: public
        name: name
        manga:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        version: 1
      properties:
        name:
          type: string
        visibility:
          enum:
          - public
          - private
          type: string
        manga:
          items:
            format: uuid
            type: string
          type: array
        version:
          minimum: 1
          type: integer
      required:
      - version
      title: CustomListEdit
      type: object
    CustomListResponse:
      example:
        result: ok
        data:
          relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            visibility: private
            name: name
            version: 1
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: custom_list
        response: entity
      properties:
        result:
          enum:
          - ok
          - error
          type: string
        response:
          default: entity
          type: string
        data:
          $ref: '#/components/schemas/CustomList'
      title: CustomListResponse
      type: object
    CustomList:
      example:
        relationships:
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        attributes:
          visibility: private
          name: name
          version: 1
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: custom_list
      properties:
        id:
          format: uuid
          type: string
        type:
          enum:
          - custom_list
          type: string
        attributes:
          $ref: '#/components/schemas/CustomListAttributes'
        relationships:
          items:
            $ref: '#/components/schemas/Relationship'
          type: array
      title: CustomList
      type: object
    CustomListAttributes:
      example:
        visibility: private
        name: name
        version: 1
      properties:
        name:
          type: string
        visibility:
          enum:
          - private
          - public
          type: string
        version:
          minimum: 1
          type: integer
      title: CustomListAttributes
      type: object
    CoverResponse:
      example:
        result: result
        data:
          relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            volume: volume
            createdAt: createdAt
            fileName: fileName
            description: description
            version: 1
            updatedAt: updatedAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: cover_art
        response: entity
      properties:
        result:
          type: string
        response:
          default: entity
          type: string
        data:
          $ref: '#/components/schemas/Cover'
      title: CoverResponse
      type: object
    Cover:
      example:
        relationships:
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        attributes:
          volume: volume
          createdAt: createdAt
          fileName: fileName
          description: description
          version: 1
          updatedAt: updatedAt
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: cover_art
      properties:
        id:
          format: uuid
          type: string
        type:
          enum:
          - cover_art
          type: string
        attributes:
          $ref: '#/components/schemas/CoverAttributes'
        relationships:
          items:
            $ref: '#/components/schemas/Relationship'
          type: array
      title: Cover
      type: object
    CoverAttributes:
      example:
        volume: volume
        createdAt: createdAt
        fileName: fileName
        description: description
        version: 1
        updatedAt: updatedAt
      properties:
        volume:
          nullable: true
          type: string
        fileName:
          type: string
        description:
          nullable: true
          type: string
        version:
          minimum: 1
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
      title: CoverAttributes
      type: object
    CoverEdit:
      example:
        volume: volume
        description: description
        version: 1
      properties:
        volume:
          maxLength: 8
          minLength: 0
          nullable: true
          type: string
        description:
          maxLength: 512
          minLength: 0
          nullable: true
          type: string
        version:
          minimum: 1
          type: integer
      required:
      - version
      - volume
      title: CoverEdit
      type: object
    AuthorResponse:
      example:
        result: result
        data:
          relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            fanBox: https://openapi-generator.tech
            skeb: https://openapi-generator.tech
            youtube: https://openapi-generator.tech
            fantia: https://openapi-generator.tech
            website: https://openapi-generator.tech
            tumblr: https://openapi-generator.tech
            biography:
              key: biography
            version: 1
            melonBook: https://openapi-generator.tech
            booth: https://openapi-generator.tech
            createdAt: createdAt
            twitter: https://openapi-generator.tech
            imageUrl: imageUrl
            pixiv: https://openapi-generator.tech
            nicoVideo: https://openapi-generator.tech
            name: name
            updatedAt: updatedAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: author
        response: entity
      properties:
        result:
          type: string
        response:
          default: entity
          type: string
        data:
          $ref: '#/components/schemas/Author'
      title: AuthorResponse
      type: object
    Author:
      example:
        relationships:
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        attributes:
          fanBox: https://openapi-generator.tech
          skeb: https://openapi-generator.tech
          youtube: https://openapi-generator.tech
          fantia: https://openapi-generator.tech
          website: https://openapi-generator.tech
          tumblr: https://openapi-generator.tech
          biography:
            key: biography
          version: 1
          melonBook: https://openapi-generator.tech
          booth: https://openapi-generator.tech
          createdAt: createdAt
          twitter: https://openapi-generator.tech
          imageUrl: imageUrl
          pixiv: https://openapi-generator.tech
          nicoVideo: https://openapi-generator.tech
          name: name
          updatedAt: updatedAt
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: author
      properties:
        id:
          format: uuid
          type: string
        type:
          enum:
          - author
          type: string
        attributes:
          $ref: '#/components/schemas/AuthorAttributes'
        relationships:
          items:
            $ref: '#/components/schemas/Relationship'
          type: array
      title: Author
      type: object
    AuthorAttributes:
      example:
        fanBox: https://openapi-generator.tech
        skeb: https://openapi-generator.tech
        youtube: https://openapi-generator.tech
        fantia: https://openapi-generator.tech
        website: https://openapi-generator.tech
        tumblr: https://openapi-generator.tech
        biography:
          key: biography
        version: 1
        melonBook: https://openapi-generator.tech
        booth: https://openapi-generator.tech
        createdAt: createdAt
        twitter: https://openapi-generator.tech
        imageUrl: imageUrl
        pixiv: https://openapi-generator.tech
        nicoVideo: https://openapi-generator.tech
        name: name
        updatedAt: updatedAt
      properties:
        name:
          type: string
        imageUrl:
          type: string
        biography:
          additionalProperties:
            type: string
          type: object
        twitter:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        pixiv:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        melonBook:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        fanBox:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        booth:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        nicoVideo:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        skeb:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        fantia:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        tumblr:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        youtube:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        website:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        version:
          minimum: 1
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
      title: AuthorAttributes
      type: object
    AuthorEdit:
      example:
        fanBox: https://openapi-generator.tech
        skeb: https://openapi-generator.tech
        youtube: https://openapi-generator.tech
        fantia: https://openapi-generator.tech
        website: https://openapi-generator.tech
        tumblr: https://openapi-generator.tech
        version: 1
        melonBook: https://openapi-generator.tech
        booth: https://openapi-generator.tech
        twitter: https://openapi-generator.tech
        pixiv: https://openapi-generator.tech
        nicoVideo: https://openapi-generator.tech
        name: name
      properties:
        name:
          type: string
        twitter:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        pixiv:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        melonBook:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        fanBox:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        booth:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        nicoVideo:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        skeb:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        fantia:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        tumblr:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        youtube:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        website:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        version:
          minimum: 1
          type: integer
      required:
      - version
      title: AuthorEdit
      type: object
    AuthorCreate:
      additionalProperties: false
      example:
        fanBox: https://openapi-generator.tech
        skeb: https://openapi-generator.tech
        youtube: https://openapi-generator.tech
        fantia: https://openapi-generator.tech
        website: https://openapi-generator.tech
        tumblr: https://openapi-generator.tech
        version: 1
        melonBook: https://openapi-generator.tech
        booth: https://openapi-generator.tech
        twitter: https://openapi-generator.tech
        pixiv: https://openapi-generator.tech
        nicoVideo: https://openapi-generator.tech
        name: name
      properties:
        name:
          type: string
        twitter:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        pixiv:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        melonBook:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        fanBox:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        booth:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        nicoVideo:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        skeb:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        fantia:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        tumblr:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        youtube:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        website:
          format: uri
          nullable: true
          pattern: ^https?://
          type: string
        version:
          minimum: 1
          type: integer
      required:
      - name
      title: AuthorCreate
      type: object
    MappingIdBody:
      additionalProperties: false
      example:
        ids:
        - 0
        - 0
        type: group
      properties:
        type:
          enum:
          - group
          - manga
          - chapter
          - tag
          type: string
        ids:
          items:
            type: integer
          type: array
      title: MappingIdBody
      type: object
    MappingIdResponse:
      example:
        result: ok
        total: 5
        data:
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            newId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            legacyId: 0
            type: manga
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: mapping_id
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            newId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            legacyId: 0
            type: manga
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: mapping_id
        offset: 1
        response: collection
        limit: 6
      properties:
        result:
          default: ok
          type: string
        response:
          default: collection
          type: string
        data:
          items:
            $ref: '#/components/schemas/MappingId'
          type: array
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
      title: MappingIdResponse
      type: object
    MappingId:
      example:
        relationships:
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        attributes:
          newId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          legacyId: 0
          type: manga
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: mapping_id
      properties:
        id:
          format: uuid
          type: string
        type:
          enum:
          - mapping_id
          type: string
        attributes:
          $ref: '#/components/schemas/MappingIdAttributes'
        relationships:
          items:
            $ref: '#/components/schemas/Relationship'
          type: array
      title: MappingId
      type: object
    MappingIdAttributes:
      example:
        newId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        legacyId: 0
        type: manga
      properties:
        type:
          enum:
          - manga
          - chapter
          - group
          - tag
          type: string
        legacyId:
          type: integer
        newId:
          format: uuid
          type: string
      title: MappingIdAttributes
      type: object
    TagResponse:
      example:
        result: ok
        total: 1
        data:
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            name:
              en: This is a localized string
              fr: C'est une chaine traduite
            description:
              en: This is a localized string
              fr: C'est une chaine traduite
            version: 1
            group: group
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: tag
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            name:
              en: This is a localized string
              fr: C'est une chaine traduite
            description:
              en: This is a localized string
              fr: C'est une chaine traduite
            version: 1
            group: group
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: tag
        offset: 6
        response: collection
        limit: 0
      properties:
        result:
          default: ok
          type: string
        response:
          default: collection
          type: string
        data:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
      title: TagResponse
      type: object
    Tag:
      example:
        relationships:
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        attributes:
          name:
            en: This is a localized string
            fr: C'est une chaine traduite
          description:
            en: This is a localized string
            fr: C'est une chaine traduite
          version: 1
          group: group
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: tag
      properties:
        id:
          format: uuid
          type: string
        type:
          enum:
          - tag
          type: string
        attributes:
          $ref: '#/components/schemas/TagAttributes'
        relationships:
          items:
            $ref: '#/components/schemas/Relationship'
          type: array
      title: Tag
      type: object
    TagAttributes:
      example:
        name:
          en: This is a localized string
          fr: C'est une chaine traduite
        description:
          en: This is a localized string
          fr: C'est une chaine traduite
        version: 1
        group: group
      properties:
        name:
          additionalProperties:
            pattern: ^[a-z]{2,8}$
            type: string
          example:
            en: This is a localized string
            fr: C'est une chaine traduite
          title: LocalizedString
          type: object
        description:
          additionalProperties:
            pattern: ^[a-z]{2,8}$
            type: string
          example:
            en: This is a localized string
            fr: C'est une chaine traduite
          title: LocalizedString
          type: object
        group:
          type: string
        version:
          minimum: 1
          type: integer
      title: TagAttributes
      type: object
    UserResponse:
      example:
        result: ok
        data:
          relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            roles:
            - roles
            - roles
            version: 1
            username: username
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: user
        response: entity
      properties:
        result:
          enum:
          - ok
          type: string
        response:
          default: entity
          type: string
        data:
          $ref: '#/components/schemas/User'
      title: UserResponse
      type: object
    SendAccountActivationCode:
      additionalProperties: false
      example:
        email: email
      properties:
        email:
          format: email
          type: string
      required:
      - email
      title: SendAccountActivationCode
      type: object
    RecoverCompleteBody:
      additionalProperties: false
      example:
        newPassword: newPassword
      properties:
        newPassword:
          maxLength: 1024
          minLength: 8
          type: string
      required:
      - newPassword
      title: RecoverCompleteBody
      type: object
    UpdateMangaStatus:
      example:
        status: reading
      properties:
        status:
          enum:
          - reading
          - on_hold
          - plan_to_read
          - dropped
          - re_reading
          - completed
          nullable: true
          type: string
      required:
      - status
      title: UpdateMangaStatus
      type: object
    ChapterRequest:
      properties:
        title:
          maxLength: 255
          nullable: true
          type: string
        volume:
          nullable: true
          type: string
        chapter:
          maxLength: 8
          nullable: true
          type: string
        translatedLanguage:
          pattern: ^[a-zA-Z\-]{2,5}$
          type: string
        groups:
          items:
            format: uuid
            maxLength: 36
            minLength: 36
            type: string
          type: array
        version:
          minimum: 1
          type: integer
      title: ChapterRequest
      type: object
    CoverList:
      example:
        result: ok
        total: 5
        data:
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            volume: volume
            createdAt: createdAt
            fileName: fileName
            description: description
            version: 1
            updatedAt: updatedAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: cover_art
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            volume: volume
            createdAt: createdAt
            fileName: fileName
            description: description
            version: 1
            updatedAt: updatedAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: cover_art
        offset: 1
        response: collection
        limit: 6
      properties:
        result:
          default: ok
          type: string
        response:
          default: collection
          type: string
        data:
          items:
            $ref: '#/components/schemas/Cover'
          type: array
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
      title: CoverList
      type: object
    AuthorList:
      example:
        result: ok
        total: 5
        data:
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            fanBox: https://openapi-generator.tech
            skeb: https://openapi-generator.tech
            youtube: https://openapi-generator.tech
            fantia: https://openapi-generator.tech
            website: https://openapi-generator.tech
            tumblr: https://openapi-generator.tech
            biography:
              key: biography
            version: 1
            melonBook: https://openapi-generator.tech
            booth: https://openapi-generator.tech
            createdAt: createdAt
            twitter: https://openapi-generator.tech
            imageUrl: imageUrl
            pixiv: https://openapi-generator.tech
            nicoVideo: https://openapi-generator.tech
            name: name
            updatedAt: updatedAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: author
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            fanBox: https://openapi-generator.tech
            skeb: https://openapi-generator.tech
            youtube: https://openapi-generator.tech
            fantia: https://openapi-generator.tech
            website: https://openapi-generator.tech
            tumblr: https://openapi-generator.tech
            biography:
              key: biography
            version: 1
            melonBook: https://openapi-generator.tech
            booth: https://openapi-generator.tech
            createdAt: createdAt
            twitter: https://openapi-generator.tech
            imageUrl: imageUrl
            pixiv: https://openapi-generator.tech
            nicoVideo: https://openapi-generator.tech
            name: name
            updatedAt: updatedAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: author
        offset: 1
        response: collection
        limit: 6
      properties:
        result:
          default: ok
          type: string
        response:
          default: collection
          type: string
        data:
          items:
            $ref: '#/components/schemas/Author'
          type: array
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
      title: AuthorList
      type: object
    ChapterList:
      example:
        result: ok
        total: 5
        data:
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            chapter: chapter
            externalUrl: externalUrl
            data:
            - data
            - data
            publishAt: publishAt
            translatedLanguage: translatedLanguage
            title: title
            version: 1
            dataSaver:
            - dataSaver
            - dataSaver
            volume: volume
            createdAt: createdAt
            uploader: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            hash: hash
            updatedAt: updatedAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: chapter
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            chapter: chapter
            externalUrl: externalUrl
            data:
            - data
            - data
            publishAt: publishAt
            translatedLanguage: translatedLanguage
            title: title
            version: 1
            dataSaver:
            - dataSaver
            - dataSaver
            volume: volume
            createdAt: createdAt
            uploader: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            hash: hash
            updatedAt: updatedAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: chapter
        offset: 1
        response: collection
        limit: 6
      properties:
        result:
          default: ok
          type: string
        response:
          default: collection
          type: string
        data:
          items:
            $ref: '#/components/schemas/Chapter'
          type: array
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
      title: ChapterList
      type: object
    ScanlationGroupList:
      example:
        result: ok
        total: 5
        data:
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            altNames:
            - en: This is a localized string
              fr: C'est une chaine traduite
            - en: This is a localized string
              fr: C'est une chaine traduite
            website: website
            contactEmail: contactEmail
            description: description
            official: true
            version: 1
            createdAt: createdAt
            twitter: https://openapi-generator.tech
            discord: discord
            name: name
            ircChannel: ircChannel
            ircServer: ircServer
            locked: true
            focusedLanguage:
            - focusedLanguage
            - focusedLanguage
            updatedAt: updatedAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: scanlation_group
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            altNames:
            - en: This is a localized string
              fr: C'est une chaine traduite
            - en: This is a localized string
              fr: C'est une chaine traduite
            website: website
            contactEmail: contactEmail
            description: description
            official: true
            version: 1
            createdAt: createdAt
            twitter: https://openapi-generator.tech
            discord: discord
            name: name
            ircChannel: ircChannel
            ircServer: ircServer
            locked: true
            focusedLanguage:
            - focusedLanguage
            - focusedLanguage
            updatedAt: updatedAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: scanlation_group
        offset: 1
        response: collection
        limit: 6
      properties:
        result:
          default: ok
          type: string
        response:
          default: collection
          type: string
        data:
          items:
            $ref: '#/components/schemas/ScanlationGroup'
          type: array
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
      title: ScanlationGroupList
      type: object
    MangaRelationCreate:
      allOf:
      - $ref: '#/components/schemas/MangaRelationRequest'
      - required:
        - relation
        - targetManga
    MangaRelationRequest:
      properties:
        targetManga:
          format: uuid
          type: string
        relation:
          enum:
          - monochrome
          - main_story
          - adapted_from
          - based_on
          - prequel
          - side_story
          - doujinshi
          - same_franchise
          - shared_universe
          - sequel
          - spin_off
          - alternate_story
          - preserialization
          - colored
          - serialization
          type: string
      title: MangaRelationRequest
      type: object
    MangaRelationList:
      example:
        result: ok
        total: 5
        data:
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            version: 1
            relation: monochrome
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: manga_relation
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            version: 1
            relation: monochrome
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: manga_relation
        offset: 1
        response: collection
        limit: 6
      properties:
        result:
          default: ok
          type: string
        response:
          default: collection
          type: string
        data:
          items:
            $ref: '#/components/schemas/MangaRelation'
          type: array
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
      title: MangaRelationList
      type: object
    MangaRelationResponse:
      example:
        result: ok
        data:
          relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            version: 1
            relation: monochrome
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: manga_relation
        response: entity
      properties:
        result:
          enum:
          - ok
          - error
          type: string
        response:
          default: entity
          type: string
        data:
          $ref: '#/components/schemas/MangaRelation'
      title: MangaRelationResponse
      type: object
    MangaRelation:
      example:
        relationships:
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        - related: monochrome
          attributes: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        attributes:
          version: 1
          relation: monochrome
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: manga_relation
      properties:
        id:
          format: uuid
          type: string
        type:
          enum:
          - manga_relation
          type: string
        attributes:
          $ref: '#/components/schemas/MangaRelationAttributes'
        relationships:
          items:
            $ref: '#/components/schemas/Relationship'
          type: array
      title: MangaRelation
      type: object
    MangaRelationAttributes:
      example:
        version: 1
        relation: monochrome
      properties:
        relation:
          enum:
          - monochrome
          - main_story
          - adapted_from
          - based_on
          - prequel
          - side_story
          - doujinshi
          - same_franchise
          - shared_universe
          - sequel
          - spin_off
          - alternate_story
          - preserialization
          - colored
          - serialization
          type: string
        version:
          minimum: 1
          type: integer
      title: MangaRelationAttributes
      type: object
    MangaList:
      example:
        result: ok
        total: 2
        data:
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            lastVolume: lastVolume
            year: 0
            description:
              en: This is a localized string
              fr: C'est une chaine traduite
            title:
              en: This is a localized string
              fr: C'est une chaine traduite
            originalLanguage: originalLanguage
            lastChapter: lastChapter
            version: 1
            tags:
            - relationships:
              - related: monochrome
                attributes: '{}'
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                type: type
              - related: monochrome
                attributes: '{}'
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                type: type
              attributes:
                name:
                  en: This is a localized string
                  fr: C'est une chaine traduite
                description:
                  en: This is a localized string
                  fr: C'est une chaine traduite
                version: 1
                group: group
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: tag
            - relationships:
              - related: monochrome
                attributes: '{}'
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                type: type
              - related: monochrome
                attributes: '{}'
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                type: type
              attributes:
                name:
                  en: This is a localized string
                  fr: C'est une chaine traduite
                description:
                  en: This is a localized string
                  fr: C'est une chaine traduite
                version: 1
                group: group
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: tag
            altTitles:
            - en: This is a localized string
              fr: C'est une chaine traduite
            - en: This is a localized string
              fr: C'est une chaine traduite
            publicationDemographic: shounen
            createdAt: createdAt
            isLocked: true
            links:
              key: links
            contentRating: safe
            state: draft
            status: status
            updatedAt: updatedAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: manga
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            lastVolume: lastVolume
            year: 0
            description:
              en: This is a localized string
              fr: C'est une chaine traduite
            title:
              en: This is a localized string
              fr: C'est une chaine traduite
            originalLanguage: originalLanguage
            lastChapter: lastChapter
            version: 1
            tags:
            - relationships:
              - related: monochrome
                attributes: '{}'
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                type: type
              - related: monochrome
                attributes: '{}'
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                type: type
              attributes:
                name:
                  en: This is a localized string
                  fr: C'est une chaine traduite
                description:
                  en: This is a localized string
                  fr: C'est une chaine traduite
                version: 1
                group: group
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: tag
            - relationships:
              - related: monochrome
                attributes: '{}'
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                type: type
              - related: monochrome
                attributes: '{}'
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                type: type
              attributes:
                name:
                  en: This is a localized string
                  fr: C'est une chaine traduite
                description:
                  en: This is a localized string
                  fr: C'est une chaine traduite
                version: 1
                group: group
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: tag
            altTitles:
            - en: This is a localized string
              fr: C'est une chaine traduite
            - en: This is a localized string
              fr: C'est une chaine traduite
            publicationDemographic: shounen
            createdAt: createdAt
            isLocked: true
            links:
              key: links
            contentRating: safe
            state: draft
            status: status
            updatedAt: updatedAt
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: manga
        offset: 5
        response: collection
        limit: 5
      properties:
        result:
          default: ok
          type: string
        response:
          default: collection
          type: string
        data:
          items:
            $ref: '#/components/schemas/Manga'
          type: array
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
      title: MangaList
      type: object
    CustomListList:
      example:
        result: ok
        total: 1
        data:
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            visibility: private
            name: name
            version: 1
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: custom_list
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            visibility: private
            name: name
            version: 1
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: custom_list
        offset: 6
        response: collection
        limit: 0
      properties:
        result:
          default: ok
          type: string
        response:
          default: collection
          type: string
        data:
          items:
            $ref: '#/components/schemas/CustomList'
          type: array
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
      title: CustomListList
      type: object
    UserList:
      example:
        result: ok
        total: 1
        data:
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            roles:
            - roles
            - roles
            version: 1
            username: username
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: user
        - relationships:
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          - related: monochrome
            attributes: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
          attributes:
            roles:
            - roles
            - roles
            version: 1
            username: username
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: user
        offset: 6
        response: collection
        limit: 0
      properties:
        result:
          default: ok
          type: string
        response:
          default: collection
          type: string
        data:
          items:
            $ref: '#/components/schemas/User'
          type: array
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
      title: UserList
      type: object
    UploadSession:
      example:
        attributes:
          createdAt: createdAt
          isDeleted: true
          isProcessed: true
          version: 1
          isCommitted: true
          updatedAt: updatedAt
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: upload_session
      properties:
        id:
          format: uuid
          type: string
        type:
          enum:
          - upload_session
          type: string
        attributes:
          $ref: '#/components/schemas/UploadSessionAttributes'
      title: UploadSession
      type: object
    UploadSessionAttributes:
      example:
        createdAt: createdAt
        isDeleted: true
        isProcessed: true
        version: 1
        isCommitted: true
        updatedAt: updatedAt
      properties:
        isCommitted:
          type: boolean
        isProcessed:
          type: boolean
        isDeleted:
          type: boolean
        version:
          minimum: 1
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
      title: UploadSessionAttributes
      type: object
    UploadSessionFile:
      example:
        attributes:
          originalFileName: originalFileName
          fileSize: 6.027456183070403
          fileHash: fileHash
          mimeType: mimeType
          source: local
          version: 1
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: upload_session_file
      properties:
        id:
          format: uuid
          type: string
        type:
          enum:
          - upload_session_file
          type: string
        attributes:
          $ref: '#/components/schemas/UploadSessionFileAttributes'
      title: UploadSessionFile
      type: object
    UploadSessionFileAttributes:
      example:
        originalFileName: originalFileName
        fileSize: 6.027456183070403
        fileHash: fileHash
        mimeType: mimeType
        source: local
        version: 1
      properties:
        originalFileName:
          type: string
        fileHash:
          type: string
        fileSize:
          type: number
        mimeType:
          type: string
        source:
          enum:
          - local
          - remote
          type: string
        version:
          minimum: 1
          type: integer
      title: UploadSessionFileAttributes
      type: object
    ChapterReadMarkerBatch:
      additionalProperties: false
      example:
        chapterIdsRead:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        chapterIdsUnread:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      oneOf:
      - required:
        - chapterIdsRead
      - required:
        - chapterIdsUnread
      - required:
        - chapterIdsRead
        - chapterIdsUnread
      properties:
        chapterIdsRead:
          items:
            format: uuid
            maxLength: 36
            minLength: 36
            type: string
          type: array
        chapterIdsUnread:
          items:
            format: uuid
            maxLength: 36
            minLength: 36
            type: string
          type: array
      title: ChapterReadMarkersBatch
      type: object
      x-examples:
        example-read:
          chapterIdsRead:
          - 1
          - 2
          - 3
        example-unread:
          chapterIdsUnread:
          - 1
          - 2
          - 3
        example-mixed:
          chapterIdsRead:
          - 1
          - 2
          - 3
          chapterIdsUnread:
          - 1
          - 2
          - 3
    BeginUploadSession:
      additionalProperties: false
      example:
        groups:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        manga: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        groups:
          items:
            format: uuid
            maxLength: 36
            minLength: 36
            type: string
          type: array
        manga:
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
      required:
      - groups
      - manga
      title: BeginUploadSession
      type: object
    BeginEditSession:
      additionalProperties: false
      example:
        version: 1
      properties:
        version:
          minimum: 1
          type: integer
      required:
      - version
      title: BeginEditSession
      type: object
    CommitUploadSession:
      example:
        pageOrder:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        chapterDraft:
          volume: volume
          chapter: chapter
          externalUrl: externalUrl
          publishAt: publishAt
          translatedLanguage: translatedLanguage
          title: title
      properties:
        chapterDraft:
          $ref: '#/components/schemas/ChapterDraft'
        pageOrder:
          description: ordered list of Upload Session File ids
          items:
            format: uuid
            maxLength: 36
            minLength: 36
            type: string
          maxItems: 500
          minItems: 1
          type: array
      title: BeginUploadSession
      type: object
    ChapterDraft:
      additionalProperties: false
      example:
        volume: volume
        chapter: chapter
        externalUrl: externalUrl
        publishAt: publishAt
        translatedLanguage: translatedLanguage
        title: title
      properties:
        volume:
          maxLength: 8
          nullable: true
          pattern: ^((0|[1-9]\d*)(\.\d+)?[a-z]?)?$
          type: string
        chapter:
          maxLength: 8
          nullable: true
          pattern: ^((0|[1-9]\d*)(\.\d+)?[a-z]?)?$
          type: string
        title:
          maxLength: 255
          nullable: true
          type: string
        translatedLanguage:
          pattern: ^[a-zA-Z\-]{2,5}$
          type: string
        externalUrl:
          maxLength: 512
          nullable: true
          pattern: ^https?://
          type: string
        publishAt:
          pattern: ^\d{4}-[0-1]\d-([0-2]\d|3[0-1])T([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$
          type: string
      required:
      - chapter
      - title
      - translatedLanguage
      - volume
      type: object
    order:
      default:
        latestUploadedChapter: desc
      properties:
        title:
          enum:
          - asc
          - desc
          type: string
        year:
          enum:
          - asc
          - desc
          type: string
        createdAt:
          enum:
          - asc
          - desc
          type: string
        updatedAt:
          enum:
          - asc
          - desc
          type: string
        latestUploadedChapter:
          enum:
          - asc
          - desc
          type: string
        followedCount:
          enum:
          - asc
          - desc
          type: string
        relevance:
          enum:
          - asc
          - desc
          type: string
      type: object
    inline_response_200_chapters:
      example:
        chapter: chapter
        count: 6
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        chapter:
          type: string
        id:
          format: uuid
          type: string
        count:
          type: integer
      type: object
    inline_response_200_volumes:
      example:
        volume: volume
        chapters:
          key:
            chapter: chapter
            count: 6
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        count: 0
      properties:
        volume:
          type: string
        count:
          type: integer
        chapters:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200_chapters'
          type: object
      type: object
    inline_response_200:
      example:
        result: ok
        volumes:
          key:
            volume: volume
            chapters:
              key:
                chapter: chapter
                count: 6
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            count: 0
      properties:
        result:
          default: ok
          type: string
        volumes:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200_volumes'
          type: object
      type: object
    order_1:
      properties:
        username:
          enum:
          - asc
          - desc
          type: string
      type: object
    inline_object:
      properties:
        oldPassword:
          maxLength: 1024
          minLength: 8
          type: string
        newPassword:
          maxLength: 1024
          minLength: 8
          type: string
      required:
      - newPassword
      - oldPassword
      type: object
    inline_object_1:
      properties:
        email:
          format: email
          type: string
      required:
      - email
      type: object
    order_2:
      properties:
        createdAt:
          enum:
          - asc
          - desc
          type: string
        updatedAt:
          enum:
          - asc
          - desc
          type: string
        publishAt:
          enum:
          - asc
          - desc
          type: string
        volume:
          enum:
          - asc
          - desc
          type: string
        chapter:
          enum:
          - asc
          - desc
          type: string
      type: object
    order_3:
      properties:
        createdAt:
          enum:
          - asc
          - desc
          type: string
        updatedAt:
          enum:
          - asc
          - desc
          type: string
        publishAt:
          enum:
          - asc
          - desc
          type: string
        volume:
          enum:
          - asc
          - desc
          type: string
        chapter:
          enum:
          - asc
          - desc
          type: string
      type: object
    order_4:
      properties:
        createdAt:
          enum:
          - asc
          - desc
          type: string
        updatedAt:
          enum:
          - asc
          - desc
          type: string
        publishAt:
          enum:
          - asc
          - desc
          type: string
        volume:
          enum:
          - asc
          - desc
          type: string
        chapter:
          enum:
          - asc
          - desc
          type: string
      type: object
    order_5:
      properties:
        createdAt:
          enum:
          - asc
          - desc
          type: string
        updatedAt:
          enum:
          - asc
          - desc
          type: string
        volume:
          enum:
          - asc
          - desc
          type: string
      type: object
    inline_object_2:
      properties:
        file:
          format: binary
          type: string
        volume:
          maxLength: 8
          nullable: true
          pattern: ^(0|[1-9]\\d*)((\\.\\d+){1,2})?[a-z]?$
          type: string
        description:
          nullable: false
          type: string
      type: object
    order_6:
      properties:
        name:
          enum:
          - asc
          - desc
          type: string
      type: object
    order_7:
      properties:
        createdAt:
          enum:
          - asc
          - desc
          type: string
        updatedAt:
          enum:
          - asc
          - desc
          type: string
        publishAt:
          enum:
          - asc
          - desc
          type: string
        volume:
          enum:
          - asc
          - desc
          type: string
        chapter:
          enum:
          - asc
          - desc
          type: string
      type: object
    inline_response_200_1:
      example:
        result: ok
        data:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        result:
          enum:
          - ok
          type: string
        data:
          items:
            format: uuid
            type: string
          type: array
      type: object
    inline_response_200_2:
      example:
        result: ok
      properties:
        result:
          enum:
          - ok
          type: string
      type: object
    inline_response_200_3:
      example:
        result: ok
        data: ""
      properties:
        result:
          enum:
          - ok
          type: string
        data:
          oneOf:
          - items:
              format: uuid
              type: string
            type: array
          - additionalProperties:
              items:
                format: uuid
                type: string
              type: array
            type: object
      type: object
    inline_response_200_4:
      example:
        result: ok
      properties:
        result:
          enum:
          - ok
          - error
          type: string
      type: object
    inline_response_200_5:
      example:
        baseUrl: https://abcdef.xyz123.mangadex.network:12345/some-temporary-access-token
      properties:
        result:
          default: ok
          type: string
        baseUrl:
          description: |-
            The base URL to construct final image URLs from.
            The URL returned is valid for the requested chapter only, and for a duration of 15 minutes from the time of the response.
          type: string
      type: object
    inline_response_200_6:
      example:
        result: ok
        statuses:
          key: reading
      properties:
        result:
          default: ok
          type: string
        statuses:
          additionalProperties:
            enum:
            - reading
            - on_hold
            - plan_to_read
            - dropped
            - re_reading
            - completed
            type: string
          type: object
      type: object
    inline_response_200_7:
      example:
        result: ok
        status: reading
      properties:
        result:
          default: ok
          type: string
        status:
          enum:
          - reading
          - on_hold
          - plan_to_read
          - dropped
          - re_reading
          - completed
          type: string
      type: object
    inline_object_3:
      additionalProperties: false
      properties:
        version:
          minimum: 1
          type: integer
      type: object
    order_8:
      default:
        createdAt: desc
      properties:
        title:
          enum:
          - asc
          - desc
          type: string
        year:
          enum:
          - asc
          - desc
          type: string
        createdAt:
          enum:
          - asc
          - desc
          type: string
        updatedAt:
          enum:
          - asc
          - desc
          type: string
      type: object
    inline_object_4:
      properties:
        captchaChallenge:
          minLength: 1
          type: string
      required:
      - captchaChallenge
      type: object
    inline_response_200_8_attributes:
      example:
        reason:
          en: This is a localized string
          fr: C'est une chaine traduite
        detailsRequired: true
        category: manga
        version: 1
      properties:
        reason:
          additionalProperties:
            pattern: ^[a-z]{2,8}$
            type: string
          example:
            en: This is a localized string
            fr: C'est une chaine traduite
          title: LocalizedString
          type: object
        detailsRequired:
          type: boolean
        category:
          enum:
          - manga
          - chapter
          - scanlation_group
          - user
          type: string
        version:
          minimum: 1
          type: integer
      type: object
    inline_response_200_8_data:
      example:
        attributes:
          reason:
            en: This is a localized string
            fr: C'est une chaine traduite
          detailsRequired: true
          category: manga
          version: 1
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: report_reason
      properties:
        id:
          format: uuid
          type: string
        type:
          default: report_reason
          type: string
        attributes:
          $ref: '#/components/schemas/inline_response_200_8_attributes'
      type: object
    inline_response_200_8:
      example:
        result: ok
        total: 5
        data:
        - attributes:
            reason:
              en: This is a localized string
              fr: C'est une chaine traduite
            detailsRequired: true
            category: manga
            version: 1
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: report_reason
        - attributes:
            reason:
              en: This is a localized string
              fr: C'est une chaine traduite
            detailsRequired: true
            category: manga
            version: 1
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: report_reason
        offset: 1
        response: collection
        limit: 6
      properties:
        result:
          default: ok
          type: string
        response:
          default: collection
          type: string
        data:
          items:
            $ref: '#/components/schemas/inline_response_200_8_data'
          type: array
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
      type: object
    inline_object_5:
      properties:
        category:
          enum:
          - manga
          - chapter
          - user
          - scanlation_group
          type: string
        reason:
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        objectId:
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        details:
          type: string
      type: object
    inline_object_6:
      properties:
        file:
          format: binary
          type: string
      type: object
    inline_response_200_9:
      example:
        result: ok
        data:
        - attributes:
            originalFileName: originalFileName
            fileSize: 6.027456183070403
            fileHash: fileHash
            mimeType: mimeType
            source: local
            version: 1
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: upload_session_file
        - attributes:
            originalFileName: originalFileName
            fileSize: 6.027456183070403
            fileHash: fileHash
            mimeType: mimeType
            source: local
            version: 1
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: upload_session_file
        errors:
        - id: id
          detail: detail
          title: title
          status: 0
        - id: id
          detail: detail
          title: title
          status: 0
      properties:
        result:
          enum:
          - ok
          - error
          type: string
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
        data:
          items:
            $ref: '#/components/schemas/UploadSessionFile'
          type: array
      type: object
    LoginResponse_token:
      example:
        session: session
        refresh: refresh
      properties:
        session:
          type: string
        refresh:
          type: string
      type: object
  securitySchemes:
    Bearer:
      scheme: bearer
      type: http

